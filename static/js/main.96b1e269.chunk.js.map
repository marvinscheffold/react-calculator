{"version":3,"sources":["utils/constants/themes.ts","components/toggle-button/toggle-button-half.tsx","components/toggle-button/toggle-button.tsx","components/screen/screen.tsx","components/button/button.tsx","utils/keys.tsx","components/keyboard/keyboard-ui.tsx","components/keyboard/keyboard-hardware-events.tsx","components/keyboard/keyboard.tsx","components/bar/bar.tsx","components/casing/casing.tsx","utils/string-to-key.tsx","utils/format-solution.ts","components/calculator/calculator.tsx","components/app/app.tsx","utils/theme-helper.ts","serviceWorkerRegistration.ts","index.js"],"names":["Themes","ToggleButtonHalf","active","children","callback","onClick","className","ToggleButton","themeContext","useContext","ThemContext","theme","nextTheme","LIGHT","DARK","fullScreenContext","FullScreenContext","isFullScreen","setIsFullScreen","setTheme","Screen","pressedKeys","prevPressedKeys","map","key","index","React","cloneElement","appearance","changePerChar","startAtChar","stopAtChar","Button","props","color","SOLUTION","id","mathFunction","isMathOperation","canComeFirst","canComeLast","canBeInSolution","keyboardOperations","INFINITY","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","ZERO","E_NOTATION","PLUS","MINUS","TIMES","DIVIDE","PERCENT","NEGATE","COMMA","BACKSPACE","EQUALS","ALL_CLEAR","ANS","KeyboardUi","onAnsKey","onAddKey","onDeleteLastKey","onAllClear","onEqual","keys","KeyboardHardwareEvents","handleKeys","onKeyEvent","e","includes","Keyboard","Bar","Casing","stringToSolutionKey","solution","appearanceReactElements","mathFunctions","createReturnable","returnable","join","Object","entries","push","split","forEach","char","isSolutionInfinity","toLocaleLowerCase","indexOf","roundIfNecessary","usable","parseFloat","lengthBeforeDecimal","Math","round","toString","length","maxLengthBehindDecimal","max","roundToDecimals","toExponentialIfNecessary","toExponential","MAX_NUMBER_OF_CHARS_IN_SOLUTION","beforeE","behindE","removeTrailingZerosAfterPeriod","number","numberOfDecimals","pow","Calculator","useState","setPressedKeys","setPrevPressedKeys","lastSolution","setLastSolution","formatSolution","calculate","getKeysToCalculate","reduce","acc","cur","getNextPressedKeys","string","stringToAnsKey","nextPressedKeys","pop","calculatable","Function","currentPressedKeys","newKey","keysToCalculate","createContext","App","window","matchMedia","matches","handle","useFullScreenHandle","useEffect","enter","exit","Provider","value","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.96b1e269.chunk.js","sourcesContent":["export enum Themes {\n    LIGHT = \"light\",\n    DARK = \"dark\",\n}\n","import { ReactElement } from \"react\";\n\ntype Props = {\n    active: boolean;\n    children: ReactElement;\n    callback: Function;\n};\n\nexport function ToggleButtonHalf({ active, children, callback }: Props) {\n    return (\n        <button\n            onClick={() => callback()}\n            className={`toggle-button-half ${\n                active ? \"toggle-button-half--active\" : \"\"\n            }`}\n        >\n            {children}\n        </button>\n    );\n}\n","import \"./toggle-button.css\";\nimport { ToggleButtonHalf } from \"./toggle-button-half\";\nimport { useContext } from \"react\";\nimport { FullScreenContext, ThemContext } from \"../app/app\";\nimport { Themes } from \"../../utils/constants/themes\";\n\nexport function ToggleButton() {\n    const themeContext = useContext(ThemContext);\n    const theme = themeContext.theme;\n    const nextTheme = theme === Themes.LIGHT ? Themes.DARK : Themes.LIGHT;\n\n    const fullScreenContext = useContext(FullScreenContext);\n    const isFullScreen = fullScreenContext.isFullScreen;\n    const setIsFullScreen = fullScreenContext.setIsFullScreen;\n\n    return (\n        <div className={\"toggle-button\"}>\n            <ToggleButtonHalf\n                active={theme === \"dark\"}\n                callback={() => themeContext.setTheme(nextTheme)}\n            >\n                <i className=\"far fa-moon\"></i>\n            </ToggleButtonHalf>\n            <ToggleButtonHalf\n                active={isFullScreen}\n                callback={() => {\n                    setIsFullScreen(!isFullScreen);\n                }}\n            >\n                <i className=\"fas fa-expand\"></i>\n            </ToggleButtonHalf>\n        </div>\n    );\n}\n","import \"./screen.css\";\nimport { Key } from \"../../utils/keys\";\nimport React from \"react\";\nimport { ReactFontSizeByTextLength } from \"react-font-size-by-text-length\";\n\ntype Props = {\n    pressedKeys: Key[];\n    prevPressedKeys: Key[];\n};\n\nexport default function Screen({ pressedKeys, prevPressedKeys }: Props) {\n    return (\n        <div className={\"screen\"}>\n            <h3>\n                {prevPressedKeys.map((key, index) =>\n                    React.cloneElement(key.appearance, { key: index })\n                )}\n            </h3>\n            <h1>\n                <ReactFontSizeByTextLength\n                    changePerChar={8}\n                    startAtChar={9}\n                    stopAtChar={12}\n                >\n                    {pressedKeys.map((key, index) =>\n                        React.cloneElement(key.appearance, {\n                            key: index,\n                        })\n                    )}\n                </ReactFontSizeByTextLength>\n            </h1>\n        </div>\n    );\n}\n","import { ReactElement } from \"react\";\nimport \"./button.css\";\n\ntype Props = {\n    callback: Function;\n    color: \"primary\" | \"secondary\" | \"normal\";\n    children: ReactElement;\n};\n\nexport function Button(props: Props) {\n    let className = \"\";\n    if (props.color !== \"normal\") {\n        className = `button--${props.color}`;\n    }\n    return (\n        <button\n            onClick={() => props.callback()}\n            className={`button ${className}`}\n        >\n            {props.children}\n        </button>\n    );\n}\n","import { ReactElement } from \"react\";\n\nexport type Key = {\n    id: string;\n    appearance: ReactElement;\n    mathFunction: string;\n    isMathOperation: boolean;\n    canComeFirst: boolean;\n    /* Can it be the last key in array when solution is calculated? */\n    canComeLast: boolean;\n    canBeInSolution: boolean;\n    keyboardOperations: string[];\n};\n\nexport const SOLUTION: Key = {\n    id: \"SOLUTION\",\n    appearance: <span></span>,\n    mathFunction: \"\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    /* False because solution key cannot be inside itself */\n    canBeInSolution: false,\n    keyboardOperations: [],\n};\n\nexport const INFINITY: Key = {\n    id: \"INFINITY\",\n    appearance: <span>Infinity</span>,\n    mathFunction: \"Infinity\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: true,\n    keyboardOperations: [],\n};\n\nexport const ONE: Key = {\n    id: \"ONE\",\n    appearance: <span>1</span>,\n    mathFunction: \"1\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: true,\n    keyboardOperations: [\"1\"],\n};\n\nexport const TWO: Key = {\n    id: \"TWO\",\n    appearance: <span>2</span>,\n    mathFunction: \"2\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: true,\n    keyboardOperations: [\"2\"],\n};\n\nexport const THREE: Key = {\n    id: \"THREE\",\n    appearance: <span>3</span>,\n    mathFunction: \"3\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: true,\n    keyboardOperations: [\"3\"],\n};\n\nexport const FOUR: Key = {\n    id: \"FOUR\",\n    appearance: <span>4</span>,\n    mathFunction: \"4\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: true,\n    keyboardOperations: [\"4\"],\n};\n\nexport const FIVE: Key = {\n    id: \"FIVE\",\n    appearance: <span>5</span>,\n    mathFunction: \"5\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: true,\n    keyboardOperations: [\"5\"],\n};\n\nexport const SIX: Key = {\n    id: \"SIX\",\n    appearance: <span>6</span>,\n    mathFunction: \"6\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: true,\n    keyboardOperations: [\"6\"],\n};\n\nexport const SEVEN: Key = {\n    id: \"SEVEN\",\n    appearance: <span>7</span>,\n    mathFunction: \"7\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: true,\n    keyboardOperations: [\"7\"],\n};\n\nexport const EIGHT: Key = {\n    id: \"EIGHT\",\n    appearance: <span>8</span>,\n    mathFunction: \"8\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: true,\n    keyboardOperations: [\"8\"],\n};\n\nexport const NINE: Key = {\n    id: \"NINE\",\n    appearance: <span>9</span>,\n    mathFunction: \"9\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: true,\n    keyboardOperations: [\"9\"],\n};\n\nexport const ZERO: Key = {\n    id: \"ZERO\",\n    appearance: <span>0</span>,\n    mathFunction: \"0\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: true,\n    keyboardOperations: [\"0\"],\n};\n\nexport const E_NOTATION: Key = {\n    id: \"E_NOTATION\",\n    appearance: <span>e</span>,\n    mathFunction: \"e\",\n    isMathOperation: false,\n    canComeFirst: false,\n    canComeLast: false,\n    canBeInSolution: true,\n    keyboardOperations: [],\n};\n\nexport const PLUS: Key = {\n    id: \"PLUS\",\n    appearance: <i className=\"fas fa-plus\"></i>,\n    mathFunction: \"+\",\n    isMathOperation: true,\n    canComeFirst: false,\n    canComeLast: false,\n    canBeInSolution: true,\n    keyboardOperations: [\"+\"],\n};\n\nexport const MINUS: Key = {\n    id: \"MINUS\",\n    appearance: <i className=\"fas fa-minus\"></i>,\n    mathFunction: \"-\",\n    isMathOperation: true,\n    canComeFirst: true,\n    canComeLast: false,\n    canBeInSolution: true,\n    keyboardOperations: [\"-\"],\n};\n\nexport const TIMES: Key = {\n    id: \"TIMES\",\n    appearance: <i className=\"fas fa-times\"></i>,\n    mathFunction: \"*\",\n    isMathOperation: true,\n    canComeFirst: false,\n    canComeLast: false,\n    canBeInSolution: false,\n    keyboardOperations: [\"*\"],\n};\n\nexport const DIVIDE: Key = {\n    id: \"DIVIDE\",\n    appearance: <i className=\"fas fa-divide\"></i>,\n    mathFunction: \"/\",\n    isMathOperation: true,\n    canComeFirst: false,\n    canComeLast: false,\n    canBeInSolution: false,\n    keyboardOperations: [\"shift+7\"],\n};\n\nexport const PERCENT: Key = {\n    id: \"PERCENT\",\n    appearance: <i className=\"fas fa-percent\"></i>,\n    mathFunction: \"/100\",\n    isMathOperation: true,\n    canComeFirst: false,\n    canComeLast: true,\n    canBeInSolution: false,\n    keyboardOperations: [\"shift+5\"],\n};\n\nexport const NEGATE: Key = {\n    id: \"NEGATE\",\n    appearance: (\n        <>\n            <i className=\"fas fa-times\"></i>\n            <i className=\"fas fa-minus\"></i>\n            <span>1</span>\n        </>\n    ),\n    mathFunction: \"*-1\",\n    isMathOperation: true,\n    canComeFirst: false,\n    canComeLast: true,\n    canBeInSolution: false,\n    keyboardOperations: [\"shift+1\"],\n};\n\nexport const COMMA: Key = {\n    id: \"COMMA\",\n    appearance: <span>,</span>,\n    mathFunction: \".\",\n    isMathOperation: false,\n    canComeFirst: false,\n    canComeLast: false,\n    canBeInSolution: true,\n    keyboardOperations: [\",\", \".\"],\n};\n\nexport const BACKSPACE: Key = {\n    id: \"BACKSPACE\",\n    appearance: <i className=\"fas fa-undo\"></i>,\n    mathFunction: \"\",\n    isMathOperation: false,\n    canComeFirst: false,\n    canComeLast: false,\n    canBeInSolution: false,\n    keyboardOperations: [\"backspace\"],\n};\n\nexport const EQUALS: Key = {\n    id: \"EQUALS\",\n    appearance: <i className=\"fas fa-equals\"></i>,\n    mathFunction: \"\",\n    isMathOperation: true,\n    canComeFirst: false,\n    canComeLast: true,\n    canBeInSolution: false,\n    keyboardOperations: [\"shift+0\", \"enter\"],\n};\n\nexport const ALL_CLEAR: Key = {\n    id: \"ALL_CLEAR\",\n    appearance: <span>AC</span>,\n    mathFunction: \"\",\n    isMathOperation: false,\n    canComeFirst: false,\n    canComeLast: false,\n    canBeInSolution: false,\n    keyboardOperations: [\"esc\"],\n};\n\nexport const ANS: Key = {\n    id: \"ANS\",\n    appearance: <span>Ans</span>,\n    mathFunction: \"0\",\n    isMathOperation: false,\n    canComeFirst: true,\n    canComeLast: true,\n    canBeInSolution: false,\n    keyboardOperations: [\"x\", \"a\"],\n};\n","import \"./keyboard.css\";\nimport { Button } from \"../button/button\";\nimport * as keys from \"../../utils/keys\";\n\ntype Props = {\n    onAnsKey: Function;\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport default function KeyboardUi({\n    onAnsKey,\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <div className={\"keyboard\"}>\n            <Button callback={() => onAllClear()} color={\"primary\"}>\n                <span>AC</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.NEGATE)} color={\"primary\"}>\n                <span>+/-</span>\n            </Button>\n            <Button callback={() => onAnsKey()} color={\"primary\"}>\n                <span>Ans</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.DIVIDE)} color={\"secondary\"}>\n                <i className=\"fas fa-divide\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.SEVEN)} color={\"normal\"}>\n                <span>7</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.EIGHT)} color={\"normal\"}>\n                <span>8</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.NINE)} color={\"normal\"}>\n                <span>9</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.TIMES)} color={\"secondary\"}>\n                <i className=\"fas fa-times\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.FOUR)} color={\"normal\"}>\n                <span>4</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.FIVE)} color={\"normal\"}>\n                <span>5</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.SIX)} color={\"normal\"}>\n                <span>6</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.MINUS)} color={\"secondary\"}>\n                <i className=\"fas fa-minus\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.ONE)} color={\"normal\"}>\n                <span>1</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.TWO)} color={\"normal\"}>\n                <span>2</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.THREE)} color={\"normal\"}>\n                <span>3</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.PLUS)} color={\"secondary\"}>\n                <i className=\"fas fa-plus\"></i>\n            </Button>\n            <Button callback={() => onDeleteLastKey()} color={\"normal\"}>\n                <i className=\"fas fa-undo\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.ZERO)} color={\"normal\"}>\n                <span>0</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.COMMA)} color={\"normal\"}>\n                <span>,</span>\n            </Button>\n            <Button callback={() => onEqual()} color={\"secondary\"}>\n                <i className=\"fas fa-equals\"></i>\n            </Button>\n        </div>\n    );\n}\n","import KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport * as keys from \"../../utils/keys\";\n\ntype Props = {\n    onAnsKey: Function;\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport function KeyboardHardwareEvents({\n    onAnsKey,\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <>\n            <KeyboardEventHandler\n                handleKeys={keys.ONE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.ONE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.TWO.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.TWO)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.THREE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.THREE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.FOUR.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.FOUR)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.FIVE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.FIVE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.SIX.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.SIX)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.SEVEN.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.SEVEN)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.EIGHT.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.EIGHT)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.NINE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.NINE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.ZERO.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.ZERO)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.MINUS.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.MINUS)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.DIVIDE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.DIVIDE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={[\"all\"]}\n                onKeyEvent={(key, e) => {\n                    if (keys.PLUS.keyboardOperations.includes(e.key))\n                        onAddKey(keys.PLUS);\n                }}\n            />\n            <KeyboardEventHandler\n                handleKeys={[\"all\"]}\n                onKeyEvent={(key, e) => {\n                    if (keys.TIMES.keyboardOperations.includes(e.key))\n                        onAddKey(keys.TIMES);\n                }}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.ALL_CLEAR.keyboardOperations}\n                onKeyEvent={(key, e) => onAllClear()}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.EQUALS.keyboardOperations}\n                onKeyEvent={(key, e) => onEqual()}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.BACKSPACE.keyboardOperations}\n                onKeyEvent={(key, e) => onDeleteLastKey()}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.NEGATE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.NEGATE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.COMMA.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.COMMA)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.ANS.keyboardOperations}\n                onKeyEvent={(key, e) => onAnsKey()}\n            />\n        </>\n    );\n}\n","import KeyboardUi from \"./keyboard-ui\";\nimport { KeyboardHardwareEvents } from \"./keyboard-hardware-events\";\n\ntype Props = {\n    onAnsKey: Function;\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport default function Keyboard({\n    onAnsKey,\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <>\n            <KeyboardUi\n                onAnsKey={onAnsKey}\n                onAddKey={onAddKey}\n                onDeleteLastKey={onDeleteLastKey}\n                onAllClear={onAllClear}\n                onEqual={onEqual}\n            />\n            <KeyboardHardwareEvents\n                onAnsKey={onAnsKey}\n                onAddKey={onAddKey}\n                onDeleteLastKey={onDeleteLastKey}\n                onAllClear={onAllClear}\n                onEqual={onEqual}\n            />\n        </>\n    );\n}\n","import \"./bar.css\";\n\nexport default function Bar() {\n  return <div className={\"bar\"}></div>;\n}\n","import \"./casing.css\";\nimport { ToggleButton } from \"../toggle-button/toggle-button\";\nimport Screen from \"../screen/screen\";\nimport Keyboard from \"../keyboard/keyboard\";\nimport Bar from \"../bar/bar\";\nimport { Key } from \"../../utils/keys\";\n\ntype Props = {\n    pressedKeys: Key[];\n    prevPressedKeys: Key[];\n    onAnsKey: Function;\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport default function Casing({\n    pressedKeys,\n    prevPressedKeys,\n    onAnsKey,\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <div className={\"casing\"}>\n            <ToggleButton />\n            <Screen\n                pressedKeys={pressedKeys}\n                prevPressedKeys={prevPressedKeys}\n            />\n            <div className={\"casing__bottom\"}>\n                <Keyboard\n                    onAnsKey={onAnsKey}\n                    onAddKey={onAddKey}\n                    onDeleteLastKey={onDeleteLastKey}\n                    onAllClear={onAllClear}\n                    onEqual={onEqual}\n                />\n                <Bar />\n            </div>\n        </div>\n    );\n}\n","import * as keys from \"./keys\";\nimport { Key, SOLUTION, ANS } from \"./keys\";\nimport React, { ReactElement } from \"react\";\n\n/**\n * Takes string like '-20,321' or 'Infinity' and returns a Key object\n * Which looks like that and mathematically behaves like that\n * @param string\n */\nexport const stringToSolutionKey = (solution: string): Key => {\n    let appearanceReactElements: ReactElement[] = [];\n    let mathFunctions: string[] = [];\n\n    const createReturnable = (\n        appearanceReactElements: ReactElement[],\n        mathFunctions: string[]\n    ): Key => {\n        let returnable = { ...SOLUTION };\n        returnable.appearance = <>{appearanceReactElements}</>;\n        returnable.mathFunction = mathFunctions.join(\"\");\n\n        return returnable;\n    };\n\n    // First check if whole solution matches a key\n    for (const [, key] of Object.entries(keys)) {\n        if (key.mathFunction === solution && key.canBeInSolution) {\n            appearanceReactElements.push(\n                React.cloneElement(key.appearance, { key: key.id })\n            );\n            mathFunctions.push(key.mathFunction);\n            return createReturnable(appearanceReactElements, mathFunctions);\n        }\n    }\n\n    // Otherwise create solution key out of every single char of solution\n    const chars = solution.split(\"\");\n    chars.forEach((char, index) => {\n        for (const [, key] of Object.entries(keys)) {\n            if (key.mathFunction === char && key.canBeInSolution) {\n                appearanceReactElements.push(\n                    React.cloneElement(key.appearance, { key: index + key.id })\n                );\n                mathFunctions.push(key.mathFunction);\n            }\n        }\n    });\n\n    return createReturnable(appearanceReactElements, mathFunctions);\n};\n\nexport const stringToAnsKey = (string: string): Key => {\n    let returnable = { ...ANS };\n    returnable.mathFunction = string;\n    return returnable;\n};\n","const MAX_NUMBER_OF_CHARS_IN_SOLUTION = 9;\nconst HIGHEST_NUMBER_BEFORE_EXPONENTIAL = 1e9;\nconst LOWEST_NUMBER_BEFORE_EXPONENTIAL = 1e9 * -1;\n\nexport const formatSolution = (solution: string): string => {\n    let returnable = solution;\n    if (isSolutionInfinity(returnable)) return solution;\n    returnable = roundIfNecessary(returnable);\n    returnable = toExponentialIfNecessary(returnable);\n    return returnable;\n};\n\nconst isSolutionInfinity = (solution: string): boolean => {\n    return solution.toLocaleLowerCase().indexOf(\"infinity\") !== -1;\n};\n\nconst roundIfNecessary = (solution: string): string => {\n    const usable = parseFloat(solution);\n    // Check if number has decimal spaces\n    // If not return here\n    if (usable % 1 === 0) return solution;\n\n    const lengthBeforeDecimal = Math.round(usable).toString().length;\n    const maxLengthBehindDecimal = Math.max(\n        MAX_NUMBER_OF_CHARS_IN_SOLUTION - lengthBeforeDecimal,\n        0\n    );\n\n    return roundToDecimals(solution, maxLengthBehindDecimal);\n};\n\nconst toExponentialIfNecessary = (solution: string): string => {\n    const usable = parseFloat(solution);\n\n    if (\n        usable > HIGHEST_NUMBER_BEFORE_EXPONENTIAL ||\n        usable < LOWEST_NUMBER_BEFORE_EXPONENTIAL\n    ) {\n        const exponential = usable.toExponential(\n            MAX_NUMBER_OF_CHARS_IN_SOLUTION - 4\n        );\n        const [beforeE, behindE] = exponential.split(\"e\");\n        const exponentialWithoutTrailingZeros =\n            removeTrailingZerosAfterPeriod(beforeE) + \"e\" + behindE;\n        return exponentialWithoutTrailingZeros;\n    }\n    return solution;\n};\n\n// Small helper functions\n\nconst removeTrailingZerosAfterPeriod = (number: string): string => {\n    const usable = parseFloat(number);\n    return usable.toString();\n};\n\nconst roundToDecimals = (number: string, numberOfDecimals: number): string => {\n    const usable = parseFloat(number);\n\n    let rounded =\n        Math.round(usable * Math.pow(10, numberOfDecimals)) /\n        Math.pow(10, numberOfDecimals);\n\n    return rounded.toString();\n};\n","import { useState } from \"react\";\nimport Casing from \"../casing/casing\";\nimport {\n    Key,\n    ZERO,\n    MINUS,\n    EQUALS,\n    ANS,\n    SOLUTION,\n    COMMA,\n} from \"../../utils/keys\";\nimport { stringToSolutionKey, stringToAnsKey } from \"../../utils/string-to-key\";\nimport { formatSolution } from \"../../utils/format-solution\";\n\nexport default function Calculator() {\n    const [pressedKeys, setPressedKeys] = useState<Key[]>([ZERO]);\n    const [prevPressedKeys, setPrevPressedKeys] = useState<Key[]>([]);\n    const [lastSolution, setLastSolution] = useState(\"0\");\n\n    const solution = formatSolution(\n        calculate(\n            getKeysToCalculate(pressedKeys).reduce<string>(\n                (acc: string, cur) => {\n                    return acc + cur.mathFunction;\n                },\n                \"\"\n            )\n        ).toString()\n    );\n\n    const onAnsKey = () => {\n        onAddKey(stringToAnsKey(lastSolution));\n    };\n\n    const onAddKey = (key: Key) => {\n        setPressedKeys(getNextPressedKeys(pressedKeys, key));\n        setPrevPressedKeys([ANS, EQUALS, stringToSolutionKey(lastSolution)]);\n    };\n\n    const onDeleteLastKey = () => {\n        if (pressedKeys.length <= 1) {\n            onAllClear();\n            return;\n        }\n\n        const nextPressedKeys = [...pressedKeys];\n        nextPressedKeys.pop();\n        setPressedKeys(nextPressedKeys);\n    };\n\n    const onAllClear = () => {\n        setPrevPressedKeys([]);\n        setPressedKeys([ZERO]);\n    };\n\n    const onEqual = () => {\n        if (pressedKeys.length <= 1) return;\n        setLastSolution(solution);\n        setPrevPressedKeys([...pressedKeys, EQUALS]);\n        setPressedKeys([stringToSolutionKey(solution)]);\n    };\n\n    return (\n        <Casing\n            onAnsKey={onAnsKey}\n            onAddKey={onAddKey}\n            onDeleteLastKey={onDeleteLastKey}\n            onAllClear={onAllClear}\n            onEqual={onEqual}\n            pressedKeys={pressedKeys}\n            prevPressedKeys={prevPressedKeys}\n        />\n    );\n}\n\nconst calculate = (calculatable: string): string => {\n    return calculatable.length === 0\n        ? \"\"\n        : Function(`;return ${calculatable}`)();\n};\n\nconst getNextPressedKeys = (currentPressedKeys: Key[], newKey: Key): Key[] => {\n    let nextPressedKeys = [...currentPressedKeys];\n\n    // If it´s the first key-stroke only add key if it can be pressed first\n    if (currentPressedKeys.length === 0 && !newKey.canComeFirst)\n        return nextPressedKeys;\n\n    // If first pressed key is SOLUTION\n    // and newKey can come first\n    // and newKey is NOT Operation\n    // -> Replace SOLUTION with new key\n    if (\n        currentPressedKeys.length === 1 &&\n        currentPressedKeys[0].id === SOLUTION.id &&\n        !newKey.isMathOperation &&\n        newKey.canComeFirst\n    ) {\n        return [newKey];\n    }\n\n    // If first pressed key is a ZERO replace it with newKey\n    if (\n        currentPressedKeys.length === 1 &&\n        currentPressedKeys[0].id === ZERO.id &&\n        newKey.canComeFirst\n    ) {\n        return [newKey];\n    }\n\n    // If first pressed key is minus and new key\n    // is operation but not minus do nothing\n    if (\n        currentPressedKeys.length === 1 &&\n        currentPressedKeys[0].id === MINUS.id &&\n        newKey.isMathOperation\n    ) {\n        return nextPressedKeys;\n    }\n\n    // If last pressed key is operation or SOLUTION and new key is COMMA\n    // -> Do nothing\n    if (\n        (currentPressedKeys[currentPressedKeys.length - 1].isMathOperation ||\n            currentPressedKeys[currentPressedKeys.length - 1].id ===\n                SOLUTION.id) &&\n        newKey.id === COMMA.id\n    ) {\n        return nextPressedKeys;\n    }\n\n    // If last pressed key is operation and new key is operation, replace it\n    if (\n        currentPressedKeys.length >= 1 &&\n        currentPressedKeys[currentPressedKeys.length - 1].isMathOperation &&\n        newKey.isMathOperation\n    ) {\n        nextPressedKeys[nextPressedKeys.length - 1] = newKey;\n        return nextPressedKeys;\n    }\n\n    // If a comma has already been pressed prevent\n    // todo: Prevent multiple commas\n    nextPressedKeys.push(newKey);\n    return nextPressedKeys;\n};\n\n// Remove trailing operations\nconst getKeysToCalculate = (pressedKeys: Key[]): Key[] => {\n    let keysToCalculate = [...pressedKeys];\n\n    if (pressedKeys.length === 0) return pressedKeys;\n\n    if (!pressedKeys[pressedKeys.length - 1].canComeLast) {\n        keysToCalculate.pop();\n        return keysToCalculate;\n    }\n    return keysToCalculate;\n};\n","import \"./app.css\";\nimport Calculator from \"../calculator/calculator\";\nimport React, { useEffect, useState } from \"react\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport { getUserPreferredTheme } from \"../../utils/theme-helper\";\n\ntype ThemeContextType = {\n    theme: string;\n    setTheme: Function;\n};\n\ntype FullScreenContextType = {\n    isFullScreen: boolean;\n    setIsFullScreen: Function;\n};\n\nexport const ThemContext = React.createContext<ThemeContextType>(\n    {} as ThemeContextType\n);\n\nexport const FullScreenContext = React.createContext<FullScreenContextType>(\n    {} as FullScreenContextType\n);\n\nexport function App() {\n    const [theme, setTheme] = useState(getUserPreferredTheme());\n    const [isFullScreen, setIsFullScreen] = useState(false);\n    const handle = useFullScreenHandle();\n\n    useEffect(() => {\n        isFullScreen ? handle.enter() : handle.exit();\n    }, [isFullScreen, handle]);\n\n    return (\n        <FullScreen handle={handle}>\n            <div className=\"app\" data-theme={theme}>\n                <ThemContext.Provider value={{ theme, setTheme }}>\n                    <FullScreenContext.Provider\n                        value={{ isFullScreen, setIsFullScreen }}\n                    >\n                        <Calculator />\n                    </FullScreenContext.Provider>\n                </ThemContext.Provider>\n            </div>\n        </FullScreen>\n    );\n}\n","import { Themes } from \"./constants/themes\";\n\nexport const getUserPreferredTheme = (): string => {\n    if (\n        window.matchMedia &&\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ) {\n        return Themes.DARK;\n    }\n\n    return Themes.LIGHT;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/app/app\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}