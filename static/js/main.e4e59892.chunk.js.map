{"version":3,"sources":["components/theme-toggle-button/theme-toggle-icon.tsx","components/theme-toggle-button/theme-toggle-button.tsx","utils/keys.tsx","utils/string-to-key.tsx","components/screen/screen.tsx","components/button/button.tsx","components/keyboard/keyboard.tsx","components/bar/bar.tsx","components/casing/casing.tsx","components/calculator/calculator.tsx","components/app/app.tsx","index.js"],"names":["ThemeToggleIcon","props","className","active","children","ThemeToggleButton","themeContext","useContext","ThemContext","fullScreenContext","FullScreenContext","theme","onClick","handle","enter","EMPTY","appearance","mathFunction","isOperation","canBePressedFirst","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","ZERO","PLUS","MINUS","TIMES","COMMA","DIVIDE","PERCENT","NEGATE","stringToKey","string","Object","entries","keys","key","Screen","pressedKeys","solutionAsKeys","solution","split","map","index","React","cloneElement","Button","color","callback","Keyboard","addKey","deleteLastKey","allClear","equal","Bar","Casing","Calculator","useState","setPressedKeys","calculate","getKeysToCalculate","reduce","acc","cur","toString","getNextPressedKeys","solutionToKeys","calculatable","length","Function","nextPressedKeys","pop","currentPressedKeys","push","keysToCalculate","createContext","setTheme","App","useFullScreenHandle","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4e59892.chunk.js","sourcesContent":["import { ReactElement } from \"react\";\n\ntype Props = {\n    active: boolean;\n    children: ReactElement;\n};\n\nexport function ThemeToggleIcon(props: Props) {\n    return (\n        <span\n            className={`theme-toggle-icon ${\n                props.active ? \"theme-toggle-icon--active\" : \"\"\n            }`}\n        >\n            {props.children}\n        </span>\n    );\n}\n","import \"./theme-toggle-button.css\";\nimport { ThemeToggleIcon } from \"./theme-toggle-icon\";\nimport { useContext } from \"react\";\nimport { FullScreenContext, ThemContext } from \"../app/app\";\n\nexport function ThemeToggleButton() {\n    const themeContext = useContext(ThemContext);\n    const fullScreenContext = useContext(FullScreenContext);\n    const theme = themeContext.theme;\n    const nextTheme = theme === \"light\" ? \"dark\" : \"light\";\n\n    return (\n        <button\n            className={\"theme-toggle-button\"}\n            // onClick={() => themeContext.setTheme(nextTheme)}\n            onClick={fullScreenContext!.handle.enter}\n        >\n            <ThemeToggleIcon active={theme === \"light\"}>\n                <i className=\"far fa-sun\"></i>\n            </ThemeToggleIcon>\n            <ThemeToggleIcon active={theme === \"dark\"}>\n                <i className=\"far fa-moon\"></i>\n            </ThemeToggleIcon>\n        </button>\n    );\n}\n","import { ReactElement } from \"react\";\n\nexport type Key = {\n    appearance: ReactElement;\n    mathFunction: string;\n    isOperation: boolean;\n    canBePressedFirst: boolean;\n};\n\nexport const EMPTY: Key = {\n    appearance: <span></span>,\n    mathFunction: \"\",\n    isOperation: true,\n    canBePressedFirst: true,\n};\n\nexport const ONE: Key = {\n    appearance: <span>1</span>,\n    mathFunction: \"1\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const TWO: Key = {\n    appearance: <span>2</span>,\n    mathFunction: \"2\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const THREE: Key = {\n    appearance: <span>3</span>,\n    mathFunction: \"3\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const FOUR: Key = {\n    appearance: <span>4</span>,\n    mathFunction: \"4\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const FIVE: Key = {\n    appearance: <span>5</span>,\n    mathFunction: \"5\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const SIX: Key = {\n    appearance: <span>6</span>,\n    mathFunction: \"6\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const SEVEN: Key = {\n    appearance: <span>7</span>,\n    mathFunction: \"7\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const EIGHT: Key = {\n    appearance: <span>8</span>,\n    mathFunction: \"8\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const NINE: Key = {\n    appearance: <span>9</span>,\n    mathFunction: \"9\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const ZERO: Key = {\n    appearance: <span>0</span>,\n    mathFunction: \"0\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const PLUS: Key = {\n    appearance: <i className=\"fas fa-plus\"></i>,\n    mathFunction: \"+\",\n    isOperation: true,\n    canBePressedFirst: false,\n};\n\nexport const MINUS: Key = {\n    appearance: <i className=\"fas fa-minus\"></i>,\n    mathFunction: \"-\",\n    isOperation: true,\n    canBePressedFirst: false,\n};\n\nexport const TIMES: Key = {\n    appearance: <i className=\"fas fa-times\"></i>,\n    mathFunction: \"*\",\n    isOperation: true,\n    canBePressedFirst: false,\n};\n\nexport const COMMA: Key = {\n    appearance: <span>,</span>,\n    mathFunction: \".\",\n    isOperation: true,\n    canBePressedFirst: false,\n};\n\nexport const DIVIDE: Key = {\n    appearance: <i className=\"fas fa-divide\"></i>,\n    mathFunction: \"/\",\n    isOperation: true,\n    canBePressedFirst: false,\n};\n\nexport const PERCENT: Key = {\n    appearance: <i className=\"fas fa-percent\"></i>,\n    mathFunction: \"/100\",\n    isOperation: false,\n    canBePressedFirst: false,\n};\n\nexport const NEGATE: Key = {\n    appearance: (\n        <>\n            <i className=\"fas fa-times\"></i>\n            <i className=\"fas fa-minus\"></i>\n            <span>1</span>\n        </>\n    ),\n    mathFunction: \"*-1\",\n    isOperation: false,\n    canBePressedFirst: false,\n};\n","import * as keys from \"./keys\";\nimport { Key } from \"./keys\";\n\nexport const stringToKey = (string: string): Key => {\n    for (const [, key] of Object.entries(keys)) {\n        if (key.mathFunction === string) return key;\n    }\n    return keys.EMPTY;\n};\n","import \"./screen.css\";\nimport { Key } from \"../../utils/keys\";\nimport { stringToKey } from \"../../utils/string-to-key\";\nimport React from \"react\";\n\ntype Props = {\n    pressedKeys: Key[];\n    solution: string;\n};\n\nexport default function Screen({ pressedKeys, solution }: Props) {\n    const solutionAsKeys = solution\n        .split(\"\")\n        .map((string: string) => stringToKey(string));\n\n    return (\n        <div className={\"screen\"}>\n            <h3>\n                {solutionAsKeys.map((key, index) =>\n                    React.cloneElement(key.appearance, { key: index })\n                )}\n            </h3>\n            <h1>\n                {pressedKeys.map((key, index) =>\n                    React.cloneElement(key.appearance, { key: index })\n                )}\n            </h1>\n        </div>\n    );\n}\n","import { ReactElement } from \"react\";\nimport \"./button.css\";\n\ntype Props = {\n    callback: Function;\n    color: \"primary\" | \"secondary\" | \"normal\";\n    children: ReactElement;\n};\n\nexport function Button(props: Props) {\n    let className = \"\";\n    if (props.color !== \"normal\") {\n        className = `button--${props.color}`;\n    }\n    return (\n        <button\n            onClick={() => props.callback()}\n            className={`button ${className}`}\n        >\n            {props.children}\n        </button>\n    );\n}\n","import \"./keyboard.css\";\nimport { Button } from \"../button/button\";\nimport * as keys from \"../../utils/keys\";\n\ntype Props = {\n    addKey: Function;\n    deleteLastKey: Function;\n    allClear: Function;\n    equal: Function;\n};\n\nexport default function Keyboard({\n    addKey,\n    deleteLastKey,\n    allClear,\n    equal,\n}: Props) {\n    return (\n        <div className={\"keyboard\"}>\n            <Button callback={() => allClear()} color={\"primary\"}>\n                <span>AC</span>\n            </Button>\n            <Button callback={() => addKey(keys.NEGATE)} color={\"primary\"}>\n                <span>+/-</span>\n            </Button>\n            <Button callback={() => addKey(keys.PERCENT)} color={\"primary\"}>\n                <i className=\"fas fa-percent\"></i>\n            </Button>\n            <Button callback={() => addKey(keys.DIVIDE)} color={\"secondary\"}>\n                <i className=\"fas fa-divide\"></i>\n            </Button>\n            <Button callback={() => addKey(keys.SEVEN)} color={\"normal\"}>\n                <span>7</span>\n            </Button>\n            <Button callback={() => addKey(keys.EIGHT)} color={\"normal\"}>\n                <span>8</span>\n            </Button>\n            <Button callback={() => addKey(keys.NINE)} color={\"normal\"}>\n                <span>9</span>\n            </Button>\n            <Button callback={() => addKey(keys.TIMES)} color={\"secondary\"}>\n                <i className=\"fas fa-times\"></i>\n            </Button>\n            <Button callback={() => addKey(keys.FOUR)} color={\"normal\"}>\n                <span>4</span>\n            </Button>\n            <Button callback={() => addKey(keys.FIVE)} color={\"normal\"}>\n                <span>5</span>\n            </Button>\n            <Button callback={() => addKey(keys.SIX)} color={\"normal\"}>\n                <span>6</span>\n            </Button>\n            <Button callback={() => addKey(keys.MINUS)} color={\"secondary\"}>\n                <i className=\"fas fa-minus\"></i>\n            </Button>\n            <Button callback={() => addKey(keys.ONE)} color={\"normal\"}>\n                <span>1</span>\n            </Button>\n            <Button callback={() => addKey(keys.TWO)} color={\"normal\"}>\n                <span>2</span>\n            </Button>\n            <Button callback={() => addKey(keys.THREE)} color={\"normal\"}>\n                <span>3</span>\n            </Button>\n            <Button callback={() => addKey(keys.PLUS)} color={\"secondary\"}>\n                <i className=\"fas fa-plus\"></i>\n            </Button>\n            <Button callback={() => deleteLastKey()} color={\"normal\"}>\n                <i className=\"fas fa-undo\"></i>\n            </Button>\n            <Button callback={() => addKey(keys.ZERO)} color={\"normal\"}>\n                <span>0</span>\n            </Button>\n            <Button callback={() => addKey(keys.COMMA)} color={\"normal\"}>\n                <span>,</span>\n            </Button>\n            <Button callback={() => equal()} color={\"secondary\"}>\n                <i className=\"fas fa-equals\"></i>\n            </Button>\n        </div>\n    );\n}\n","import \"./bar.css\";\n\nexport default function Bar() {\n  return <div className={\"bar\"}></div>;\n}\n","import \"./casing.css\";\nimport { ThemeToggleButton } from \"../theme-toggle-button/theme-toggle-button\";\nimport Screen from \"../screen/screen\";\nimport Keyboard from \"../keyboard/keyboard\";\nimport Bar from \"../bar/bar\";\nimport { Key } from \"../../utils/keys\";\n\ntype Props = {\n    pressedKeys: Key[];\n    solution: string;\n    addKey: Function;\n    deleteLastKey: Function;\n    allClear: Function;\n    equal: Function;\n};\n\nexport default function Casing({\n    pressedKeys,\n    solution,\n    addKey,\n    deleteLastKey,\n    allClear,\n    equal,\n}: Props) {\n    return (\n        <div className={\"casing\"}>\n            <ThemeToggleButton />\n            <Screen pressedKeys={pressedKeys} solution={solution} />\n            <div className={\"casing__bottom\"}>\n                <Keyboard\n                    addKey={addKey}\n                    deleteLastKey={deleteLastKey}\n                    allClear={allClear}\n                    equal={equal}\n                />\n                <Bar />\n            </div>\n        </div>\n    );\n}\n","import { useState } from \"react\";\n\nimport Casing from \"../casing/casing\";\nimport { EMPTY, Key, ZERO } from \"../../utils/keys\";\nimport { stringToKey } from \"../../utils/string-to-key\";\n\nexport default function Calculator() {\n    const [pressedKeys, setPressedKeys] = useState<Key[]>([EMPTY]);\n\n    const solution = calculate(\n        getKeysToCalculate(pressedKeys).reduce<string>((acc: string, cur) => {\n            return acc + cur.mathFunction;\n        }, \"\")\n    ).toString();\n\n    return (\n        <Casing\n            addKey={(key: Key) =>\n                setPressedKeys(getNextPressedKeys(pressedKeys, key))\n            }\n            deleteLastKey={() => setPressedKeys(deleteLastKey(pressedKeys))}\n            allClear={() => setPressedKeys([EMPTY])}\n            equal={() => setPressedKeys(solutionToKeys(solution))}\n            pressedKeys={pressedKeys}\n            solution={solution}\n        />\n    );\n}\n\nconst calculate = (calculatable: string): string => {\n    return calculatable.length === 0\n        ? \"\"\n        : Function(`;return ${calculatable}`)();\n};\n\nconst solutionToKeys = (solution: string): Key[] => {\n    if (solution.length === 0) return [EMPTY];\n    return solution.split(\"\").map((string: string) => stringToKey(string));\n};\n\nconst deleteLastKey = (pressedKeys: Key[]): Key[] => {\n    let nextPressedKeys = [...pressedKeys];\n\n    if (pressedKeys.length > 1) nextPressedKeys.pop();\n\n    return nextPressedKeys;\n};\n\nconst getNextPressedKeys = (currentPressedKeys: Key[], key: Key): Key[] => {\n    let nextPressedKeys = [...currentPressedKeys];\n\n    // If it´s the first key-stroke only add key if it can be pressed first\n    if (currentPressedKeys.length <= 1 && !key.canBePressedFirst)\n        return nextPressedKeys;\n\n    // If the first key is a zero and new key is a zero, don´t add the zero\n    if (\n        currentPressedKeys.length <= 2 &&\n        currentPressedKeys[currentPressedKeys.length - 1].mathFunction ===\n            ZERO.mathFunction &&\n        key.mathFunction === ZERO.mathFunction\n    ) {\n        return nextPressedKeys;\n    }\n\n    if (\n        currentPressedKeys[currentPressedKeys.length - 1].isOperation &&\n        key.isOperation\n    ) {\n        // If last pressed key is operation and new key is operation, replace it\n        nextPressedKeys[nextPressedKeys.length - 1] = key;\n        return nextPressedKeys;\n    }\n\n    nextPressedKeys.push(key);\n    return nextPressedKeys;\n};\n\nconst getKeysToCalculate = (pressedKeys: Key[]): Key[] => {\n    let keysToCalculate = [...pressedKeys];\n\n    if (pressedKeys[pressedKeys.length - 1].isOperation) {\n        keysToCalculate.pop();\n        return keysToCalculate;\n    }\n    return keysToCalculate;\n};\n","import \"./app.css\";\nimport Calculator from \"../calculator/calculator\";\nimport React, { useState } from \"react\";\nimport {\n    FullScreen,\n    FullScreenHandle,\n    useFullScreenHandle,\n} from \"react-full-screen\";\n\ntype ThemeContextType = {\n    theme: string;\n    setTheme: Function;\n};\n\ntype FullScreenContextType = {\n    handle: FullScreenHandle;\n};\n\nexport const ThemContext = React.createContext<ThemeContextType>({\n    theme: \"light\",\n    setTheme: () => {},\n});\n\nexport const FullScreenContext =\n    React.createContext<FullScreenContextType | null>(null);\n\nexport function App() {\n    const [theme, setTheme] = useState(\"dark\");\n    const handle = useFullScreenHandle();\n\n    return (\n        <FullScreen handle={handle}>\n            <div className=\"app\" data-theme={theme}>\n                <ThemContext.Provider value={{ theme, setTheme }}>\n                    <FullScreenContext.Provider value={{ handle }}>\n                        <Calculator />\n                    </FullScreenContext.Provider>\n                </ThemContext.Provider>\n            </div>\n        </FullScreen>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/app/app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}