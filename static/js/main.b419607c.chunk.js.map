{"version":3,"sources":["utils/constants/themes.ts","components/toggle-button/toggle-button-half.tsx","components/toggle-button/toggle-button.tsx","components/screen/react-font-size-by-text-length.tsx","components/screen/screen.tsx","components/button/button.tsx","utils/keys.tsx","components/keyboard/keyboard-ui.tsx","components/keyboard/keyboard-hardware-events.tsx","components/keyboard/keyboard.tsx","components/bar/bar.tsx","components/casing/casing.tsx","utils/string-to-key.tsx","utils/format-solution.ts","components/calculator/calculator.tsx","components/app/app.tsx","utils/theme-helper.ts","serviceWorkerRegistration.ts","index.js"],"names":["Themes","ToggleButtonHalf","active","children","callback","onClick","className","ToggleButton","themeContext","useContext","ThemContext","theme","nextTheme","LIGHT","DARK","fullScreenContext","FullScreenContext","isFullScreen","setIsFullScreen","setTheme","ReactFontSizeByTextLength","maxPercent","minPercent","changePerChar","startAtChar","stopAtChar","fontSizeInPercent","getNewFontSizeInPercent","Infinity","Array","isArray","getNumberOfCharsForMultipleChildren","getNumberOfCharsForSingleChild","style","fontSize","child","props","length","returnable","forEach","numberOfChars","numberOfCharsAdjusted","Math","min","numberOfCharToConsiderForCalculation","max","Screen","pressedKeys","prevPressedKeys","map","key","index","React","cloneElement","appearance","Button","color","TEMPLATE","id","mathFunction","isOperation","canBePressedFirst","keyboardOperations","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","ZERO","E_NOTATION","PLUS","MINUS","TIMES","COMMA","DIVIDE","PERCENT","NEGATE","BACKSPACE","EQUALS","ALL_CLEAR","KeyboardUi","onAddKey","onDeleteLastKey","onAllClear","onEqual","keys","KeyboardHardwareEvents","handleKeys","onKeyEvent","e","includes","Keyboard","Bar","Casing","stringToKey","string","chars","split","appearanceReactElements","mathFunctions","Object","entries","char","push","join","roundIfNecessary","solution","usable","parseFloat","lengthBeforeDecimal","round","toString","maxLengthBehindDecimal","roundToDecimals","toExponentialIfNecessary","toExponential","MAX_NUMBER_OF_CHARS_IN_SOLUTION","beforeE","behindE","removeTrailingZerosAfterPeriod","number","numberOfDecimals","pow","Calculator","useState","setPressedKeys","setPrevPressedKeys","formatSolution","calculate","getKeysToCalculate","reduce","acc","cur","getNextPressedKeys","nextPressedKeys","pop","calculatable","Function","currentPressedKeys","newKey","keysToCalculate","createContext","App","window","matchMedia","matches","handle","useFullScreenHandle","useEffect","enter","exit","Provider","value","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b419607c.chunk.js","sourcesContent":["export enum Themes {\n    LIGHT = \"light\",\n    DARK = \"dark\",\n}\n","import { ReactElement } from \"react\";\n\ntype Props = {\n    active: boolean;\n    children: ReactElement;\n    callback: Function;\n};\n\nexport function ToggleButtonHalf({ active, children, callback }: Props) {\n    return (\n        <button\n            onClick={() => callback()}\n            className={`toggle-button-half ${\n                active ? \"toggle-button-half--active\" : \"\"\n            }`}\n        >\n            {children}\n        </button>\n    );\n}\n","import \"./toggle-button.css\";\nimport { ToggleButtonHalf } from \"./toggle-button-half\";\nimport { useContext } from \"react\";\nimport { FullScreenContext, ThemContext } from \"../app/app\";\nimport { Themes } from \"../../utils/constants/themes\";\n\nexport function ToggleButton() {\n    const themeContext = useContext(ThemContext);\n    const theme = themeContext.theme;\n    const nextTheme = theme === Themes.LIGHT ? Themes.DARK : Themes.LIGHT;\n\n    const fullScreenContext = useContext(FullScreenContext);\n    const isFullScreen = fullScreenContext.isFullScreen;\n    const setIsFullScreen = fullScreenContext.setIsFullScreen;\n\n    return (\n        <div className={\"toggle-button\"}>\n            <ToggleButtonHalf\n                active={theme === \"dark\"}\n                callback={() => themeContext.setTheme(nextTheme)}\n            >\n                <i className=\"far fa-moon\"></i>\n            </ToggleButtonHalf>\n            <ToggleButtonHalf\n                active={isFullScreen}\n                callback={() => {\n                    setIsFullScreen(!isFullScreen);\n                }}\n            >\n                <i className=\"fas fa-expand\"></i>\n            </ToggleButtonHalf>\n        </div>\n    );\n}\n","import React, { ReactElement } from \"react\";\n\ntype Props = {\n    children: ReactElement[] | ReactElement;\n    maxPercent?: number;\n    minPercent?: number;\n    changePerChar: number;\n    startAtChar?: number;\n    stopAtChar?: number;\n};\n\nexport function ReactFontSizeByTextLength({\n    children,\n    maxPercent = 100,\n    minPercent = 0,\n    changePerChar,\n    startAtChar = 0,\n    stopAtChar = Infinity,\n}: Props) {\n    const fontSizeInPercent = getNewFontSizeInPercent(\n        maxPercent,\n        minPercent,\n        changePerChar,\n        startAtChar,\n        stopAtChar,\n        Array.isArray(children)\n            ? getNumberOfCharsForMultipleChildren(children)\n            : getNumberOfCharsForSingleChild(children)\n    );\n\n    return (\n        <span style={{ fontSize: `${fontSizeInPercent}%` }}>{children}</span>\n    );\n}\n\nconst getNumberOfCharsForSingleChild = (child: ReactElement): number => {\n    return child.props.children.length;\n};\n\nconst getNumberOfCharsForMultipleChildren = (\n    children: ReactElement[]\n): number => {\n    let returnable = 0;\n    children.forEach((child) => {\n        if (child.props.children) {\n            returnable += child.props.children.length;\n        } else {\n            returnable += 1;\n        }\n    });\n\n    return returnable;\n};\n\nconst getNewFontSizeInPercent = (\n    maxPercent: number,\n    minPercent: number,\n    changePerChar: number,\n    startAtChar: number,\n    stopAtChar: number,\n    numberOfChars: number\n): number => {\n    const numberOfCharsAdjusted = Math.min(numberOfChars, stopAtChar);\n\n    const numberOfCharToConsiderForCalculation = Math.max(\n        0,\n        numberOfCharsAdjusted - (startAtChar - 1)\n    );\n\n    const fontSizeInPercent = Math.max(\n        minPercent,\n        maxPercent - changePerChar * numberOfCharToConsiderForCalculation\n    );\n    return fontSizeInPercent;\n};\n","import \"./screen.css\";\nimport { Key } from \"../../utils/keys\";\nimport React from \"react\";\nimport { ReactFontSizeByTextLength } from \"./react-font-size-by-text-length\";\n\ntype Props = {\n    pressedKeys: Key[];\n    prevPressedKeys: Key[];\n};\n\nexport default function Screen({ pressedKeys, prevPressedKeys }: Props) {\n    return (\n        <div className={\"screen\"}>\n            <h3>\n                {prevPressedKeys.map((key, index) =>\n                    React.cloneElement(key.appearance, { key: index })\n                )}\n            </h3>\n            <h1>\n                <ReactFontSizeByTextLength\n                    changePerChar={8}\n                    startAtChar={9}\n                    stopAtChar={12}\n                >\n                    {pressedKeys.map((key, index) =>\n                        React.cloneElement(key.appearance, {\n                            key: index,\n                        })\n                    )}\n                </ReactFontSizeByTextLength>\n            </h1>\n        </div>\n    );\n}\n","import { ReactElement } from \"react\";\nimport \"./button.css\";\n\ntype Props = {\n    callback: Function;\n    color: \"primary\" | \"secondary\" | \"normal\";\n    children: ReactElement;\n};\n\nexport function Button(props: Props) {\n    let className = \"\";\n    if (props.color !== \"normal\") {\n        className = `button--${props.color}`;\n    }\n    return (\n        <button\n            onClick={() => props.callback()}\n            className={`button ${className}`}\n        >\n            {props.children}\n        </button>\n    );\n}\n","import { ReactElement } from \"react\";\n\nexport type Key = {\n    id: string;\n    appearance: ReactElement;\n    mathFunction: string;\n    isOperation: boolean;\n    canBePressedFirst: boolean;\n    keyboardOperations: string[];\n};\n\nexport let TEMPLATE: Key = {\n    id: \"TEMPLATE\",\n    appearance: <span></span>,\n    mathFunction: \"\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyboardOperations: [],\n};\n\nexport const ONE: Key = {\n    id: \"ONE\",\n    appearance: <span>1</span>,\n    mathFunction: \"1\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyboardOperations: [\"1\"],\n};\n\nexport const TWO: Key = {\n    id: \"TWO\",\n    appearance: <span>2</span>,\n    mathFunction: \"2\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyboardOperations: [\"2\"],\n};\n\nexport const THREE: Key = {\n    id: \"THREE\",\n    appearance: <span>3</span>,\n    mathFunction: \"3\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyboardOperations: [\"3\"],\n};\n\nexport const FOUR: Key = {\n    id: \"FOUR\",\n    appearance: <span>4</span>,\n    mathFunction: \"4\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyboardOperations: [\"4\"],\n};\n\nexport const FIVE: Key = {\n    id: \"FIVE\",\n    appearance: <span>5</span>,\n    mathFunction: \"5\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyboardOperations: [\"5\"],\n};\n\nexport const SIX: Key = {\n    id: \"SIX\",\n    appearance: <span>6</span>,\n    mathFunction: \"6\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyboardOperations: [\"6\"],\n};\n\nexport const SEVEN: Key = {\n    id: \"SEVEN\",\n    appearance: <span>7</span>,\n    mathFunction: \"7\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyboardOperations: [\"7\"],\n};\n\nexport const EIGHT: Key = {\n    id: \"EIGHT\",\n    appearance: <span>8</span>,\n    mathFunction: \"8\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyboardOperations: [\"8\"],\n};\n\nexport const NINE: Key = {\n    id: \"NINE\",\n    appearance: <span>9</span>,\n    mathFunction: \"9\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyboardOperations: [\"9\"],\n};\n\nexport const ZERO: Key = {\n    id: \"ZERO\",\n    appearance: <span>0</span>,\n    mathFunction: \"0\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyboardOperations: [\"0\"],\n};\n\nexport const E_NOTATION: Key = {\n    id: \"E_NOTATION\",\n    appearance: <span>e</span>,\n    mathFunction: \"e\",\n    isOperation: false,\n    canBePressedFirst: false,\n    keyboardOperations: [],\n};\n\nexport const PLUS: Key = {\n    id: \"PLUS\",\n    appearance: <i className=\"fas fa-plus\"></i>,\n    mathFunction: \"+\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyboardOperations: [\"+\"],\n};\n\nexport const MINUS: Key = {\n    id: \"MINUS\",\n    appearance: <i className=\"fas fa-minus\"></i>,\n    mathFunction: \"-\",\n    isOperation: true,\n    canBePressedFirst: true,\n    keyboardOperations: [\"-\"],\n};\n\nexport const TIMES: Key = {\n    id: \"TIMES\",\n    appearance: <i className=\"fas fa-times\"></i>,\n    mathFunction: \"*\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyboardOperations: [\"*\"],\n};\n\nexport const COMMA: Key = {\n    id: \"COMMA\",\n    appearance: <span>,</span>,\n    mathFunction: \".\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyboardOperations: [\",\", \".\"],\n};\n\nexport const DIVIDE: Key = {\n    id: \"DIVIDE\",\n    appearance: <i className=\"fas fa-divide\"></i>,\n    mathFunction: \"/\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyboardOperations: [\"shift+7\"],\n};\n\nexport const PERCENT: Key = {\n    id: \"PERCENT\",\n    appearance: <i className=\"fas fa-percent\"></i>,\n    mathFunction: \"/100\",\n    isOperation: false,\n    canBePressedFirst: false,\n    keyboardOperations: [\"shift+5\"],\n};\n\nexport const NEGATE: Key = {\n    id: \"NEGATE\",\n    appearance: (\n        <>\n            <i className=\"fas fa-times\"></i>\n            <i className=\"fas fa-minus\"></i>\n            <span>1</span>\n        </>\n    ),\n    mathFunction: \"*-1\",\n    isOperation: false,\n    canBePressedFirst: false,\n    keyboardOperations: [\"shift+1\"],\n};\n\nexport const BACKSPACE: Key = {\n    id: \"BACKSPACE\",\n    appearance: <i className=\"fas fa-undo\"></i>,\n    mathFunction: \"\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyboardOperations: [\"backspace\"],\n};\n\nexport const EQUALS: Key = {\n    id: \"EQUALS\",\n    appearance: <i className=\"fas fa-equals\"></i>,\n    mathFunction: \"\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyboardOperations: [\"shift+0\", \"enter\"],\n};\n\nexport const ALL_CLEAR: Key = {\n    id: \"ALL_CLEAR\",\n    appearance: <span>AC</span>,\n    mathFunction: \"\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyboardOperations: [\"esc\"],\n};\n","import \"./keyboard.css\";\nimport { Button } from \"../button/button\";\nimport * as keys from \"../../utils/keys\";\n\ntype Props = {\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport default function KeyboardUi({\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <div className={\"keyboard\"}>\n            <Button callback={() => onAllClear()} color={\"primary\"}>\n                <span>AC</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.NEGATE)} color={\"primary\"}>\n                <span>+/-</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.PERCENT)} color={\"primary\"}>\n                <i className=\"fas fa-percent\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.DIVIDE)} color={\"secondary\"}>\n                <i className=\"fas fa-divide\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.SEVEN)} color={\"normal\"}>\n                <span>7</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.EIGHT)} color={\"normal\"}>\n                <span>8</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.NINE)} color={\"normal\"}>\n                <span>9</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.TIMES)} color={\"secondary\"}>\n                <i className=\"fas fa-times\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.FOUR)} color={\"normal\"}>\n                <span>4</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.FIVE)} color={\"normal\"}>\n                <span>5</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.SIX)} color={\"normal\"}>\n                <span>6</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.MINUS)} color={\"secondary\"}>\n                <i className=\"fas fa-minus\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.ONE)} color={\"normal\"}>\n                <span>1</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.TWO)} color={\"normal\"}>\n                <span>2</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.THREE)} color={\"normal\"}>\n                <span>3</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.PLUS)} color={\"secondary\"}>\n                <i className=\"fas fa-plus\"></i>\n            </Button>\n            <Button callback={() => onDeleteLastKey()} color={\"normal\"}>\n                <i className=\"fas fa-undo\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.ZERO)} color={\"normal\"}>\n                <span>0</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.COMMA)} color={\"normal\"}>\n                <span>,</span>\n            </Button>\n            <Button callback={() => onEqual()} color={\"secondary\"}>\n                <i className=\"fas fa-equals\"></i>\n            </Button>\n        </div>\n    );\n}\n","import KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport * as keys from \"../../utils/keys\";\n\ntype Props = {\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport function KeyboardHardwareEvents({\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <>\n            <KeyboardEventHandler\n                handleKeys={keys.ONE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.ONE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.TWO.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.TWO)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.THREE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.THREE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.FOUR.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.FOUR)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.FIVE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.FIVE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.SIX.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.SIX)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.SEVEN.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.SEVEN)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.EIGHT.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.EIGHT)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.NINE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.NINE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.ZERO.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.ZERO)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.MINUS.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.MINUS)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.DIVIDE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.DIVIDE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={[\"all\"]}\n                onKeyEvent={(key, e) => {\n                    if (keys.PLUS.keyboardOperations.includes(e.key))\n                        onAddKey(keys.PLUS);\n                }}\n            />\n            <KeyboardEventHandler\n                handleKeys={[\"all\"]}\n                onKeyEvent={(key, e) => {\n                    if (keys.TIMES.keyboardOperations.includes(e.key))\n                        onAddKey(keys.TIMES);\n                }}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.ALL_CLEAR.keyboardOperations}\n                onKeyEvent={(key, e) => onAllClear()}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.EQUALS.keyboardOperations}\n                onKeyEvent={(key, e) => onEqual()}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.BACKSPACE.keyboardOperations}\n                onKeyEvent={(key, e) => onDeleteLastKey()}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.NEGATE.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.NEGATE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.COMMA.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.COMMA)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.PERCENT.keyboardOperations}\n                onKeyEvent={(key, e) => onAddKey(keys.PERCENT)}\n            />\n        </>\n    );\n}\n","import KeyboardUi from \"./keyboard-ui\";\nimport { KeyboardHardwareEvents } from \"./keyboard-hardware-events\";\n\ntype Props = {\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport default function Keyboard({\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <>\n            <KeyboardUi\n                onAddKey={onAddKey}\n                onDeleteLastKey={onDeleteLastKey}\n                onAllClear={onAllClear}\n                onEqual={onEqual}\n            />\n            <KeyboardHardwareEvents\n                onAddKey={onAddKey}\n                onDeleteLastKey={onDeleteLastKey}\n                onAllClear={onAllClear}\n                onEqual={onEqual}\n            />\n        </>\n    );\n}\n","import \"./bar.css\";\n\nexport default function Bar() {\n  return <div className={\"bar\"}></div>;\n}\n","import \"./casing.css\";\nimport { ToggleButton } from \"../toggle-button/toggle-button\";\nimport Screen from \"../screen/screen\";\nimport Keyboard from \"../keyboard/keyboard\";\nimport Bar from \"../bar/bar\";\nimport { Key } from \"../../utils/keys\";\n\ntype Props = {\n    pressedKeys: Key[];\n    prevPressedKeys: Key[];\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport default function Casing({\n    pressedKeys,\n    prevPressedKeys,\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <div className={\"casing\"}>\n            <ToggleButton />\n            <Screen\n                pressedKeys={pressedKeys}\n                prevPressedKeys={prevPressedKeys}\n            />\n            <div className={\"casing__bottom\"}>\n                <Keyboard\n                    onAddKey={onAddKey}\n                    onDeleteLastKey={onDeleteLastKey}\n                    onAllClear={onAllClear}\n                    onEqual={onEqual}\n                />\n                <Bar />\n            </div>\n        </div>\n    );\n}\n","import * as keys from \"./keys\";\nimport { Key, TEMPLATE } from \"./keys\";\nimport React from \"react\";\n\n/**\n * Takes string like '-20,321' and returns a Key object\n * Which looks like that and mathematically behaves like that\n * @param string\n */\nexport const stringToKey = (string: string): Key => {\n    const chars = string.split(\"\");\n\n    let appearanceReactElements = [];\n    let mathFunctions = [];\n\n    for (const [index, char] of Object.entries(chars)) {\n        for (const [, key] of Object.entries(keys)) {\n            if (key.mathFunction === char) {\n                appearanceReactElements.push(\n                    React.cloneElement(key.appearance, { key: index + key.id })\n                );\n                mathFunctions.push(key.mathFunction);\n            }\n        }\n    }\n\n    let returnable = { ...TEMPLATE };\n    returnable.appearance = <>{appearanceReactElements}</>;\n    returnable.mathFunction = mathFunctions.join(\"\");\n\n    return returnable;\n};\n","const MAX_NUMBER_OF_CHARS_IN_SOLUTION = 10;\nconst HIGHEST_NUMBER_BEFORE_EXPONENTIAL = 1e9;\n\nexport const formatSolution = (solution: string): string => {\n    let returnable = solution;\n    returnable = roundIfNecessary(returnable);\n    returnable = toExponentialIfNecessary(returnable);\n    return returnable;\n};\n\nconst roundIfNecessary = (solution: string): string => {\n    const usable = parseFloat(solution);\n    // Check if number has decimal spaces\n    // If not return here\n    if (usable % 1 === 0) return solution;\n\n    const lengthBeforeDecimal = Math.round(usable).toString().length;\n    const maxLengthBehindDecimal = Math.max(\n        MAX_NUMBER_OF_CHARS_IN_SOLUTION - lengthBeforeDecimal,\n        0\n    );\n\n    return roundToDecimals(solution, maxLengthBehindDecimal);\n};\n\nconst toExponentialIfNecessary = (solution: string): string => {\n    const usable = parseFloat(solution);\n\n    if (usable > HIGHEST_NUMBER_BEFORE_EXPONENTIAL) {\n        const exponential = usable.toExponential(\n            MAX_NUMBER_OF_CHARS_IN_SOLUTION - 4\n        );\n        const [beforeE, behindE] = exponential.split(\"e\");\n        const exponentialWithoutTrailingZeros =\n            removeTrailingZerosAfterPeriod(beforeE) + \"e\" + behindE;\n        return exponentialWithoutTrailingZeros;\n    }\n    return solution;\n};\n\n// Small helper functions\n\nconst removeTrailingZerosAfterPeriod = (number: string): string => {\n    const usable = parseFloat(number);\n    return usable.toString();\n};\n\nconst roundToDecimals = (number: string, numberOfDecimals: number): string => {\n    const usable = parseFloat(number);\n\n    let rounded =\n        Math.round(usable * Math.pow(10, numberOfDecimals)) /\n        Math.pow(10, numberOfDecimals);\n\n    return rounded.toString();\n};\n","import { useState } from \"react\";\nimport Casing from \"../casing/casing\";\nimport { Key, ZERO, MINUS, EQUALS } from \"../../utils/keys\";\nimport { stringToKey } from \"../../utils/string-to-key\";\nimport { formatSolution } from \"../../utils/format-solution\";\n\nexport default function Calculator() {\n    const [pressedKeys, setPressedKeys] = useState<Key[]>([ZERO]);\n    const [prevPressedKeys, setPrevPressedKeys] = useState<Key[]>([]);\n\n    const solution = formatSolution(\n        calculate(\n            getKeysToCalculate(pressedKeys).reduce<string>(\n                (acc: string, cur) => {\n                    return acc + cur.mathFunction;\n                },\n                \"\"\n            )\n        ).toString()\n    );\n\n    const onAddKey = (key: Key) => {\n        setPressedKeys(getNextPressedKeys(pressedKeys, key));\n    };\n\n    const onDeleteLastKey = () => {\n        if (pressedKeys.length <= 1) {\n            onAllClear();\n            return;\n        }\n\n        const nextPressedKeys = [...pressedKeys];\n        nextPressedKeys.pop();\n        setPressedKeys(nextPressedKeys);\n    };\n\n    const onAllClear = () => {\n        setPrevPressedKeys([]);\n        setPressedKeys([ZERO]);\n    };\n\n    const onEqual = () => {\n        if (pressedKeys.length <= 1) return;\n\n        setPrevPressedKeys([...pressedKeys, EQUALS]);\n        setPressedKeys([stringToKey(solution)]);\n    };\n\n    return (\n        <Casing\n            onAddKey={onAddKey}\n            onDeleteLastKey={onDeleteLastKey}\n            onAllClear={onAllClear}\n            onEqual={onEqual}\n            pressedKeys={pressedKeys}\n            prevPressedKeys={prevPressedKeys}\n        />\n    );\n}\n\nconst calculate = (calculatable: string): string => {\n    return calculatable.length === 0\n        ? \"\"\n        : Function(`;return ${calculatable}`)();\n};\n\nconst getNextPressedKeys = (currentPressedKeys: Key[], newKey: Key): Key[] => {\n    let nextPressedKeys = [...currentPressedKeys];\n\n    // If it´s the first key-stroke only add key if it can be pressed first\n    if (currentPressedKeys.length === 0 && !newKey.canBePressedFirst)\n        return nextPressedKeys;\n\n    // If first pressed key is a ZERO replace it with newKey\n    if (\n        currentPressedKeys.length === 1 &&\n        currentPressedKeys[0].id === ZERO.id &&\n        newKey.canBePressedFirst\n    ) {\n        return [newKey];\n    }\n\n    // If first pressed key is minus and new key\n    // is operation but not minus do nothing\n    if (\n        currentPressedKeys.length === 1 &&\n        currentPressedKeys[0].id === MINUS.id &&\n        newKey.isOperation\n    ) {\n        return nextPressedKeys;\n    }\n\n    // If last pressed key is operation and new key is operation, replace it\n    if (\n        currentPressedKeys.length >= 1 &&\n        currentPressedKeys[currentPressedKeys.length - 1].isOperation &&\n        newKey.isOperation\n    ) {\n        nextPressedKeys[nextPressedKeys.length - 1] = newKey;\n        return nextPressedKeys;\n    }\n\n    // If a comma has already been pressed prevent\n    // todo: Prevent multiple commas\n    nextPressedKeys.push(newKey);\n    return nextPressedKeys;\n};\n\n// Remove trailing operations\nconst getKeysToCalculate = (pressedKeys: Key[]): Key[] => {\n    let keysToCalculate = [...pressedKeys];\n\n    if (pressedKeys.length === 0) return pressedKeys;\n\n    if (pressedKeys[pressedKeys.length - 1].isOperation) {\n        keysToCalculate.pop();\n        return keysToCalculate;\n    }\n    return keysToCalculate;\n};\n","import \"./app.css\";\nimport Calculator from \"../calculator/calculator\";\nimport React, { useEffect, useState } from \"react\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport { getUserPreferredTheme } from \"../../utils/theme-helper\";\n\ntype ThemeContextType = {\n    theme: string;\n    setTheme: Function;\n};\n\ntype FullScreenContextType = {\n    isFullScreen: boolean;\n    setIsFullScreen: Function;\n};\n\nexport const ThemContext = React.createContext<ThemeContextType>(\n    {} as ThemeContextType\n);\n\nexport const FullScreenContext = React.createContext<FullScreenContextType>(\n    {} as FullScreenContextType\n);\n\nexport function App() {\n    const [theme, setTheme] = useState(getUserPreferredTheme());\n    const [isFullScreen, setIsFullScreen] = useState(false);\n    const handle = useFullScreenHandle();\n\n    useEffect(() => {\n        isFullScreen ? handle.enter() : handle.exit();\n    }, [isFullScreen]);\n\n    return (\n        <FullScreen handle={handle}>\n            <div className=\"app\" data-theme={theme}>\n                <ThemContext.Provider value={{ theme, setTheme }}>\n                    <FullScreenContext.Provider\n                        value={{ isFullScreen, setIsFullScreen }}\n                    >\n                        <Calculator />\n                    </FullScreenContext.Provider>\n                </ThemContext.Provider>\n            </div>\n        </FullScreen>\n    );\n}\n","import { Themes } from \"./constants/themes\";\n\nexport const getUserPreferredTheme = (): string => {\n    if (\n        window.matchMedia &&\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ) {\n        return Themes.DARK;\n    }\n\n    return Themes.LIGHT;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/app/app\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}