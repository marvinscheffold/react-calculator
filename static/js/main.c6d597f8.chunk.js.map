{"version":3,"sources":["components/toggle-button/toggle-button-half.tsx","components/toggle-button/toggle-button.tsx","utils/keys.tsx","utils/string-to-key.tsx","components/screen/screen.tsx","components/button/button.tsx","components/keyboard/keyboard.tsx","components/bar/bar.tsx","components/casing/casing.tsx","components/calculator/calculator.tsx","components/app/app.tsx","index.js"],"names":["ToggleButtonHalf","active","children","callback","onClick","className","ToggleButton","themeContext","useContext","ThemContext","theme","nextTheme","fullScreenContext","FullScreenContext","isFullScreen","setIsFullScreen","setTheme","ONE","id","appearance","mathFunction","isOperation","canBePressedFirst","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","ZERO","PLUS","MINUS","TIMES","COMMA","DIVIDE","PERCENT","NEGATE","stringToKey","string","Object","entries","keys","key","Screen","pressedKeys","solutionAsKeys","solution","split","map","index","React","cloneElement","Button","props","color","Keyboard","addKey","deleteLastKey","allClear","equal","Bar","Casing","Calculator","useState","setPressedKeys","calculate","getKeysToCalculate","reduce","acc","cur","toString","getNextPressedKeys","solutionToKeys","calculatable","length","Function","nextPressedKeys","pop","currentPressedKeys","newKey","push","keysToCalculate","createContext","App","handle","useFullScreenHandle","useEffect","enter","exit","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6d597f8.chunk.js","sourcesContent":["import { ReactElement } from \"react\";\n\ntype Props = {\n    active: boolean;\n    children: ReactElement;\n    callback: Function;\n};\n\nexport function ToggleButtonHalf({ active, children, callback }: Props) {\n    return (\n        <button\n            onClick={() => callback()}\n            className={`toggle-button-half ${\n                active ? \"toggle-button-half--active\" : \"\"\n            }`}\n        >\n            {children}\n        </button>\n    );\n}\n","import \"./toggle-button.css\";\nimport { ToggleButtonHalf } from \"./toggle-button-half\";\nimport { useContext } from \"react\";\nimport { FullScreenContext, ThemContext } from \"../app/app\";\n\nexport function ToggleButton() {\n    const themeContext = useContext(ThemContext);\n    const theme = themeContext.theme;\n    const nextTheme = theme === \"light\" ? \"dark\" : \"light\";\n\n    const fullScreenContext = useContext(FullScreenContext);\n    const isFullScreen = fullScreenContext.isFullScreen;\n    const setIsFullScreen = fullScreenContext.setIsFullScreen;\n\n    return (\n        <div className={\"toggle-button\"}>\n            <ToggleButtonHalf\n                active={theme === \"dark\"}\n                callback={() => themeContext.setTheme(nextTheme)}\n            >\n                <i className=\"far fa-moon\"></i>\n            </ToggleButtonHalf>\n            <ToggleButtonHalf\n                active={isFullScreen}\n                callback={() => {\n                    setIsFullScreen(!isFullScreen);\n                }}\n            >\n                <i className=\"fas fa-expand\"></i>\n            </ToggleButtonHalf>\n        </div>\n    );\n}\n","import { ReactElement } from \"react\";\n\nexport type Key = {\n    id: string;\n    appearance: ReactElement;\n    mathFunction: string;\n    isOperation: boolean;\n    canBePressedFirst: boolean;\n};\n\nexport const ONE: Key = {\n    id: \"ONE\",\n    appearance: <span>1</span>,\n    mathFunction: \"1\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const TWO: Key = {\n    id: \"TWO\",\n    appearance: <span>2</span>,\n    mathFunction: \"2\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const THREE: Key = {\n    id: \"THREE\",\n    appearance: <span>3</span>,\n    mathFunction: \"3\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const FOUR: Key = {\n    id: \"FOUR\",\n    appearance: <span>4</span>,\n    mathFunction: \"4\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const FIVE: Key = {\n    id: \"FIVE\",\n    appearance: <span>5</span>,\n    mathFunction: \"5\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const SIX: Key = {\n    id: \"SIX\",\n    appearance: <span>6</span>,\n    mathFunction: \"6\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const SEVEN: Key = {\n    id: \"SEVEN\",\n    appearance: <span>7</span>,\n    mathFunction: \"7\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const EIGHT: Key = {\n    id: \"EIGHT\",\n    appearance: <span>8</span>,\n    mathFunction: \"8\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const NINE: Key = {\n    id: \"NINE\",\n    appearance: <span>9</span>,\n    mathFunction: \"9\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const ZERO: Key = {\n    id: \"ZERO\",\n    appearance: <span>0</span>,\n    mathFunction: \"0\",\n    isOperation: false,\n    canBePressedFirst: true,\n};\n\nexport const PLUS: Key = {\n    id: \"PLUS\",\n    appearance: <i className=\"fas fa-plus\"></i>,\n    mathFunction: \"+\",\n    isOperation: true,\n    canBePressedFirst: false,\n};\n\nexport const MINUS: Key = {\n    id: \"MINUS\",\n    appearance: <i className=\"fas fa-minus\"></i>,\n    mathFunction: \"-\",\n    isOperation: true,\n    canBePressedFirst: true,\n};\n\nexport const TIMES: Key = {\n    id: \"TIMES\",\n    appearance: <i className=\"fas fa-times\"></i>,\n    mathFunction: \"*\",\n    isOperation: true,\n    canBePressedFirst: false,\n};\n\nexport const COMMA: Key = {\n    id: \"COMMA\",\n    appearance: <span>,</span>,\n    mathFunction: \".\",\n    isOperation: true,\n    canBePressedFirst: false,\n};\n\nexport const DIVIDE: Key = {\n    id: \"DIVIDE\",\n    appearance: <i className=\"fas fa-divide\"></i>,\n    mathFunction: \"/\",\n    isOperation: true,\n    canBePressedFirst: false,\n};\n\nexport const PERCENT: Key = {\n    id: \"PERCENT\",\n    appearance: <i className=\"fas fa-percent\"></i>,\n    mathFunction: \"/100\",\n    isOperation: false,\n    canBePressedFirst: false,\n};\n\nexport const NEGATE: Key = {\n    id: \"NEGATE\",\n    appearance: (\n        <>\n            <i className=\"fas fa-times\"></i>\n            <i className=\"fas fa-minus\"></i>\n            <span>1</span>\n        </>\n    ),\n    mathFunction: \"*-1\",\n    isOperation: false,\n    canBePressedFirst: false,\n};\n","import * as keys from \"./keys\";\nimport { Key, ZERO } from \"./keys\";\n\nexport const stringToKey = (string: string): Key => {\n    for (const [, key] of Object.entries(keys)) {\n        if (key.mathFunction === string) return key;\n    }\n    return ZERO;\n};\n","import \"./screen.css\";\nimport { Key } from \"../../utils/keys\";\nimport { stringToKey } from \"../../utils/string-to-key\";\nimport React from \"react\";\n\ntype Props = {\n    pressedKeys: Key[];\n    solution: string;\n};\n\nexport default function Screen({ pressedKeys, solution }: Props) {\n    const solutionAsKeys = solution\n        .split(\"\")\n        .map((string: string) => stringToKey(string));\n\n    return (\n        <div className={\"screen\"}>\n            <h3>\n                {solutionAsKeys.map((key, index) =>\n                    React.cloneElement(key.appearance, { key: index })\n                )}\n            </h3>\n            <h1>\n                {pressedKeys.map((key, index) =>\n                    React.cloneElement(key.appearance, { key: index })\n                )}\n            </h1>\n        </div>\n    );\n}\n","import { ReactElement } from \"react\";\nimport \"./button.css\";\n\ntype Props = {\n    callback: Function;\n    color: \"primary\" | \"secondary\" | \"normal\";\n    children: ReactElement;\n};\n\nexport function Button(props: Props) {\n    let className = \"\";\n    if (props.color !== \"normal\") {\n        className = `button--${props.color}`;\n    }\n    return (\n        <button\n            onClick={() => props.callback()}\n            className={`button ${className}`}\n        >\n            {props.children}\n        </button>\n    );\n}\n","import \"./keyboard.css\";\nimport { Button } from \"../button/button\";\nimport * as keys from \"../../utils/keys\";\n\ntype Props = {\n    addKey: Function;\n    deleteLastKey: Function;\n    allClear: Function;\n    equal: Function;\n};\n\nexport default function Keyboard({\n    addKey,\n    deleteLastKey,\n    allClear,\n    equal,\n}: Props) {\n    return (\n        <div className={\"keyboard\"}>\n            <Button callback={() => allClear()} color={\"primary\"}>\n                <span>AC</span>\n            </Button>\n            <Button callback={() => addKey(keys.NEGATE)} color={\"primary\"}>\n                <span>+/-</span>\n            </Button>\n            <Button callback={() => addKey(keys.PERCENT)} color={\"primary\"}>\n                <i className=\"fas fa-percent\"></i>\n            </Button>\n            <Button callback={() => addKey(keys.DIVIDE)} color={\"secondary\"}>\n                <i className=\"fas fa-divide\"></i>\n            </Button>\n            <Button callback={() => addKey(keys.SEVEN)} color={\"normal\"}>\n                <span>7</span>\n            </Button>\n            <Button callback={() => addKey(keys.EIGHT)} color={\"normal\"}>\n                <span>8</span>\n            </Button>\n            <Button callback={() => addKey(keys.NINE)} color={\"normal\"}>\n                <span>9</span>\n            </Button>\n            <Button callback={() => addKey(keys.TIMES)} color={\"secondary\"}>\n                <i className=\"fas fa-times\"></i>\n            </Button>\n            <Button callback={() => addKey(keys.FOUR)} color={\"normal\"}>\n                <span>4</span>\n            </Button>\n            <Button callback={() => addKey(keys.FIVE)} color={\"normal\"}>\n                <span>5</span>\n            </Button>\n            <Button callback={() => addKey(keys.SIX)} color={\"normal\"}>\n                <span>6</span>\n            </Button>\n            <Button callback={() => addKey(keys.MINUS)} color={\"secondary\"}>\n                <i className=\"fas fa-minus\"></i>\n            </Button>\n            <Button callback={() => addKey(keys.ONE)} color={\"normal\"}>\n                <span>1</span>\n            </Button>\n            <Button callback={() => addKey(keys.TWO)} color={\"normal\"}>\n                <span>2</span>\n            </Button>\n            <Button callback={() => addKey(keys.THREE)} color={\"normal\"}>\n                <span>3</span>\n            </Button>\n            <Button callback={() => addKey(keys.PLUS)} color={\"secondary\"}>\n                <i className=\"fas fa-plus\"></i>\n            </Button>\n            <Button callback={() => deleteLastKey()} color={\"normal\"}>\n                <i className=\"fas fa-undo\"></i>\n            </Button>\n            <Button callback={() => addKey(keys.ZERO)} color={\"normal\"}>\n                <span>0</span>\n            </Button>\n            <Button callback={() => addKey(keys.COMMA)} color={\"normal\"}>\n                <span>,</span>\n            </Button>\n            <Button callback={() => equal()} color={\"secondary\"}>\n                <i className=\"fas fa-equals\"></i>\n            </Button>\n        </div>\n    );\n}\n","import \"./bar.css\";\n\nexport default function Bar() {\n  return <div className={\"bar\"}></div>;\n}\n","import \"./casing.css\";\nimport { ToggleButton } from \"../toggle-button/toggle-button\";\nimport Screen from \"../screen/screen\";\nimport Keyboard from \"../keyboard/keyboard\";\nimport Bar from \"../bar/bar\";\nimport { Key } from \"../../utils/keys\";\n\ntype Props = {\n    pressedKeys: Key[];\n    solution: string;\n    addKey: Function;\n    deleteLastKey: Function;\n    allClear: Function;\n    equal: Function;\n};\n\nexport default function Casing({\n    pressedKeys,\n    solution,\n    addKey,\n    deleteLastKey,\n    allClear,\n    equal,\n}: Props) {\n    return (\n        <div className={\"casing\"}>\n            <ToggleButton />\n            <Screen pressedKeys={pressedKeys} solution={solution} />\n            <div className={\"casing__bottom\"}>\n                <Keyboard\n                    addKey={addKey}\n                    deleteLastKey={deleteLastKey}\n                    allClear={allClear}\n                    equal={equal}\n                />\n                <Bar />\n            </div>\n        </div>\n    );\n}\n","import { useState } from \"react\";\n\nimport Casing from \"../casing/casing\";\nimport { Key, MINUS, ZERO } from \"../../utils/keys\";\nimport { stringToKey } from \"../../utils/string-to-key\";\n\nexport default function Calculator() {\n    const [pressedKeys, setPressedKeys] = useState<Key[]>([]);\n\n    const solution = calculate(\n        getKeysToCalculate(pressedKeys).reduce<string>((acc: string, cur) => {\n            return acc + cur.mathFunction;\n        }, \"\")\n    ).toString();\n\n    return (\n        <Casing\n            addKey={(key: Key) =>\n                setPressedKeys(getNextPressedKeys(pressedKeys, key))\n            }\n            deleteLastKey={() => setPressedKeys(deleteLastKey(pressedKeys))}\n            allClear={() => setPressedKeys([])}\n            equal={() => setPressedKeys(solutionToKeys(solution))}\n            pressedKeys={pressedKeys}\n            solution={solution}\n        />\n    );\n}\n\nconst calculate = (calculatable: string): string => {\n    return calculatable.length === 0\n        ? \"\"\n        : Function(`;return ${calculatable}`)();\n};\n\nconst solutionToKeys = (solution: string): Key[] => {\n    if (solution.length === 0) return [];\n    return solution.split(\"\").map((string: string) => stringToKey(string));\n};\n\nconst deleteLastKey = (pressedKeys: Key[]): Key[] => {\n    let nextPressedKeys = [...pressedKeys];\n\n    if (pressedKeys.length >= 1) nextPressedKeys.pop();\n\n    if (pressedKeys.length === 2 && pressedKeys[0].isOperation) return [];\n\n    return nextPressedKeys;\n};\n\nconst getNextPressedKeys = (currentPressedKeys: Key[], newKey: Key): Key[] => {\n    let nextPressedKeys = [...currentPressedKeys];\n\n    // If it´s the first key-stroke only add key if it can be pressed first\n    if (currentPressedKeys.length === 0 && !newKey.canBePressedFirst)\n        return nextPressedKeys;\n\n    // If first pressed key is a ZERO replace it with newKey\n    if (\n        currentPressedKeys.length === 1 &&\n        currentPressedKeys[0].id === ZERO.id &&\n        !newKey.isOperation\n    ) {\n        return [newKey];\n    }\n\n    // If first pressed key is minus and new key\n    // is operation but not minus do nothing\n    if (\n        currentPressedKeys.length === 1 &&\n        currentPressedKeys[0].isOperation &&\n        newKey.isOperation\n    ) {\n        return nextPressedKeys;\n    }\n\n    // If last pressed key is operation and new key is operation, replace it\n    if (\n        currentPressedKeys.length >= 1 &&\n        currentPressedKeys[currentPressedKeys.length - 1].isOperation &&\n        newKey.isOperation\n    ) {\n        nextPressedKeys[nextPressedKeys.length - 1] = newKey;\n        return nextPressedKeys;\n    }\n\n    // If a comma has already been pressed prevent\n\n    nextPressedKeys.push(newKey);\n    return nextPressedKeys;\n};\n\n// Remove trailing operations\nconst getKeysToCalculate = (pressedKeys: Key[]): Key[] => {\n    let keysToCalculate = [...pressedKeys];\n\n    if (pressedKeys.length === 0) return pressedKeys;\n\n    if (pressedKeys[pressedKeys.length - 1].isOperation) {\n        keysToCalculate.pop();\n        return keysToCalculate;\n    }\n    return keysToCalculate;\n};\n","import \"./app.css\";\nimport Calculator from \"../calculator/calculator\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n    FullScreen,\n    FullScreenHandle,\n    useFullScreenHandle,\n} from \"react-full-screen\";\n\ntype ThemeContextType = {\n    theme: string;\n    setTheme: Function;\n};\n\ntype FullScreenContextType = {\n    isFullScreen: boolean;\n    setIsFullScreen: Function;\n};\n\nexport const ThemContext = React.createContext<ThemeContextType>({\n    theme: \"light\",\n    setTheme: () => {},\n});\n\nexport const FullScreenContext = React.createContext<FullScreenContextType>(\n    {} as FullScreenContextType\n);\n\nexport function App() {\n    const [theme, setTheme] = useState(\"dark\");\n    const [isFullScreen, setIsFullScreen] = useState(false);\n    const handle = useFullScreenHandle();\n\n    useEffect(() => {\n        isFullScreen ? handle.enter() : handle.exit();\n    }, [isFullScreen]);\n\n    return (\n        <FullScreen handle={handle}>\n            <div className=\"app\" data-theme={theme}>\n                <ThemContext.Provider value={{ theme, setTheme }}>\n                    <FullScreenContext.Provider\n                        value={{ isFullScreen, setIsFullScreen }}\n                    >\n                        <Calculator />\n                    </FullScreenContext.Provider>\n                </ThemContext.Provider>\n            </div>\n        </FullScreen>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/app/app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}