{"version":3,"sources":["components/toggle-button/toggle-button-half.tsx","components/toggle-button/toggle-button.tsx","components/screen/screen.tsx","components/button/button.tsx","utils/keys.tsx","components/keyboard/keyboard-ui.tsx","components/keyboard/keyboard-hardware-events.tsx","components/keyboard/keyboard.tsx","components/bar/bar.tsx","components/casing/casing.tsx","utils/string-to-key.tsx","components/calculator/calculator.tsx","components/app/app.tsx","index.js"],"names":["ToggleButtonHalf","active","children","callback","onClick","className","ToggleButton","themeContext","useContext","ThemContext","theme","nextTheme","fullScreenContext","FullScreenContext","isFullScreen","setIsFullScreen","setTheme","Screen","pressedKeys","prevPressedKeys","map","key","index","React","cloneElement","appearance","Button","props","color","TEMPLATE","id","mathFunction","isOperation","canBePressedFirst","keyStrings","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","ZERO","PLUS","MINUS","TIMES","COMMA","DIVIDE","PERCENT","NEGATE","BACKSPACE","EQUALS","ALL_CLEAR","KeyboardUi","onAddKey","onDeleteLastKey","onAllClear","onEqual","keys","KeyboardHardwareEvents","handleKeys","onKeyEvent","e","includes","Keyboard","Bar","Casing","stringToKey","string","chars","split","appearanceReactElements","mathFunctions","char","Object","entries","push","Math","random","returnable","join","Calculator","useState","setPressedKeys","setPrevPressedKeys","solution","calculate","getKeysToCalculate","reduce","acc","cur","toString","getNextPressedKeys","length","nextPressedKeys","pop","calculatable","Function","currentPressedKeys","newKey","keysToCalculate","createContext","App","handle","useFullScreenHandle","useEffect","enter","exit","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57806907.chunk.js","sourcesContent":["import { ReactElement } from \"react\";\n\ntype Props = {\n    active: boolean;\n    children: ReactElement;\n    callback: Function;\n};\n\nexport function ToggleButtonHalf({ active, children, callback }: Props) {\n    return (\n        <button\n            onClick={() => callback()}\n            className={`toggle-button-half ${\n                active ? \"toggle-button-half--active\" : \"\"\n            }`}\n        >\n            {children}\n        </button>\n    );\n}\n","import \"./toggle-button.css\";\nimport { ToggleButtonHalf } from \"./toggle-button-half\";\nimport { useContext } from \"react\";\nimport { FullScreenContext, ThemContext } from \"../app/app\";\n\nexport function ToggleButton() {\n    const themeContext = useContext(ThemContext);\n    const theme = themeContext.theme;\n    const nextTheme = theme === \"light\" ? \"dark\" : \"light\";\n\n    const fullScreenContext = useContext(FullScreenContext);\n    const isFullScreen = fullScreenContext.isFullScreen;\n    const setIsFullScreen = fullScreenContext.setIsFullScreen;\n\n    return (\n        <div className={\"toggle-button\"}>\n            <ToggleButtonHalf\n                active={theme === \"dark\"}\n                callback={() => themeContext.setTheme(nextTheme)}\n            >\n                <i className=\"far fa-moon\"></i>\n            </ToggleButtonHalf>\n            <ToggleButtonHalf\n                active={isFullScreen}\n                callback={() => {\n                    setIsFullScreen(!isFullScreen);\n                }}\n            >\n                <i className=\"fas fa-expand\"></i>\n            </ToggleButtonHalf>\n        </div>\n    );\n}\n","import \"./screen.css\";\nimport { Key } from \"../../utils/keys\";\nimport React from \"react\";\n\ntype Props = {\n    pressedKeys: Key[];\n    prevPressedKeys: Key[];\n};\n\nexport default function Screen({ pressedKeys, prevPressedKeys }: Props) {\n    return (\n        <div className={\"screen\"}>\n            <h3>\n                {prevPressedKeys.map((key, index) =>\n                    React.cloneElement(key.appearance, { key: index })\n                )}\n            </h3>\n            <h1>\n                {pressedKeys.map((key, index) =>\n                    React.cloneElement(key.appearance, { key: index })\n                )}\n            </h1>\n        </div>\n    );\n}\n","import { ReactElement } from \"react\";\nimport \"./button.css\";\n\ntype Props = {\n    callback: Function;\n    color: \"primary\" | \"secondary\" | \"normal\";\n    children: ReactElement;\n};\n\nexport function Button(props: Props) {\n    let className = \"\";\n    if (props.color !== \"normal\") {\n        className = `button--${props.color}`;\n    }\n    return (\n        <button\n            onClick={() => props.callback()}\n            className={`button ${className}`}\n        >\n            {props.children}\n        </button>\n    );\n}\n","import { ReactElement } from \"react\";\n\nexport type Key = {\n    id: string;\n    appearance: ReactElement;\n    mathFunction: string;\n    isOperation: boolean;\n    canBePressedFirst: boolean;\n    keyStrings: string[];\n};\n\nexport let TEMPLATE: Key = {\n    id: \"TEMPLATE\",\n    appearance: <span></span>,\n    mathFunction: \"\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyStrings: [],\n};\n\nexport const ONE: Key = {\n    id: \"ONE\",\n    appearance: <span>1</span>,\n    mathFunction: \"1\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyStrings: [\"1\"],\n};\n\nexport const TWO: Key = {\n    id: \"TWO\",\n    appearance: <span>2</span>,\n    mathFunction: \"2\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyStrings: [\"2\"],\n};\n\nexport const THREE: Key = {\n    id: \"THREE\",\n    appearance: <span>3</span>,\n    mathFunction: \"3\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyStrings: [\"3\"],\n};\n\nexport const FOUR: Key = {\n    id: \"FOUR\",\n    appearance: <span>4</span>,\n    mathFunction: \"4\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyStrings: [\"4\"],\n};\n\nexport const FIVE: Key = {\n    id: \"FIVE\",\n    appearance: <span>5</span>,\n    mathFunction: \"5\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyStrings: [\"5\"],\n};\n\nexport const SIX: Key = {\n    id: \"SIX\",\n    appearance: <span>6</span>,\n    mathFunction: \"6\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyStrings: [\"6\"],\n};\n\nexport const SEVEN: Key = {\n    id: \"SEVEN\",\n    appearance: <span>7</span>,\n    mathFunction: \"7\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyStrings: [\"7\"],\n};\n\nexport const EIGHT: Key = {\n    id: \"EIGHT\",\n    appearance: <span>8</span>,\n    mathFunction: \"8\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyStrings: [\"8\"],\n};\n\nexport const NINE: Key = {\n    id: \"NINE\",\n    appearance: <span>9</span>,\n    mathFunction: \"9\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyStrings: [\"9\"],\n};\n\nexport const ZERO: Key = {\n    id: \"ZERO\",\n    appearance: <span>0</span>,\n    mathFunction: \"0\",\n    isOperation: false,\n    canBePressedFirst: true,\n    keyStrings: [\"0\"],\n};\n\nexport const PLUS: Key = {\n    id: \"PLUS\",\n    appearance: <i className=\"fas fa-plus\"></i>,\n    mathFunction: \"+\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyStrings: [\"+\"],\n};\n\nexport const MINUS: Key = {\n    id: \"MINUS\",\n    appearance: <i className=\"fas fa-minus\"></i>,\n    mathFunction: \"-\",\n    isOperation: true,\n    canBePressedFirst: true,\n    keyStrings: [\"-\"],\n};\n\nexport const TIMES: Key = {\n    id: \"TIMES\",\n    appearance: <i className=\"fas fa-times\"></i>,\n    mathFunction: \"*\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyStrings: [\"*\"],\n};\n\nexport const COMMA: Key = {\n    id: \"COMMA\",\n    appearance: <span>,</span>,\n    mathFunction: \".\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyStrings: [\",\", \".\"],\n};\n\nexport const DIVIDE: Key = {\n    id: \"DIVIDE\",\n    appearance: <i className=\"fas fa-divide\"></i>,\n    mathFunction: \"/\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyStrings: [\"shift+7\"],\n};\n\nexport const PERCENT: Key = {\n    id: \"PERCENT\",\n    appearance: <i className=\"fas fa-percent\"></i>,\n    mathFunction: \"/100\",\n    isOperation: false,\n    canBePressedFirst: false,\n    keyStrings: [\"shift+5\"],\n};\n\nexport const NEGATE: Key = {\n    id: \"NEGATE\",\n    appearance: (\n        <>\n            <i className=\"fas fa-times\"></i>\n            <i className=\"fas fa-minus\"></i>\n            <span>1</span>\n        </>\n    ),\n    mathFunction: \"*-1\",\n    isOperation: false,\n    canBePressedFirst: false,\n    keyStrings: [\"shift+1\"],\n};\n\nexport const BACKSPACE: Key = {\n    id: \"BACKSPACE\",\n    appearance: <i className=\"fas fa-undo\"></i>,\n    mathFunction: \"\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyStrings: [\"backspace\"],\n};\n\nexport const EQUALS: Key = {\n    id: \"EQUALS\",\n    appearance: <i className=\"fas fa-equals\"></i>,\n    mathFunction: \"\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyStrings: [\"shift+0\", \"enter\"],\n};\n\nexport const ALL_CLEAR: Key = {\n    id: \"ALL_CLEAR\",\n    appearance: <span>AC</span>,\n    mathFunction: \"\",\n    isOperation: true,\n    canBePressedFirst: false,\n    keyStrings: [\"esc\"],\n};\n","import \"./keyboard.css\";\nimport { Button } from \"../button/button\";\nimport * as keys from \"../../utils/keys\";\n\ntype Props = {\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport default function KeyboardUi({\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <div className={\"keyboard\"}>\n            <Button callback={() => onAllClear()} color={\"primary\"}>\n                <span>AC</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.NEGATE)} color={\"primary\"}>\n                <span>+/-</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.PERCENT)} color={\"primary\"}>\n                <i className=\"fas fa-percent\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.DIVIDE)} color={\"secondary\"}>\n                <i className=\"fas fa-divide\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.SEVEN)} color={\"normal\"}>\n                <span>7</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.EIGHT)} color={\"normal\"}>\n                <span>8</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.NINE)} color={\"normal\"}>\n                <span>9</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.TIMES)} color={\"secondary\"}>\n                <i className=\"fas fa-times\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.FOUR)} color={\"normal\"}>\n                <span>4</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.FIVE)} color={\"normal\"}>\n                <span>5</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.SIX)} color={\"normal\"}>\n                <span>6</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.MINUS)} color={\"secondary\"}>\n                <i className=\"fas fa-minus\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.ONE)} color={\"normal\"}>\n                <span>1</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.TWO)} color={\"normal\"}>\n                <span>2</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.THREE)} color={\"normal\"}>\n                <span>3</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.PLUS)} color={\"secondary\"}>\n                <i className=\"fas fa-plus\"></i>\n            </Button>\n            <Button callback={() => onDeleteLastKey()} color={\"normal\"}>\n                <i className=\"fas fa-undo\"></i>\n            </Button>\n            <Button callback={() => onAddKey(keys.ZERO)} color={\"normal\"}>\n                <span>0</span>\n            </Button>\n            <Button callback={() => onAddKey(keys.COMMA)} color={\"normal\"}>\n                <span>,</span>\n            </Button>\n            <Button callback={() => onEqual()} color={\"secondary\"}>\n                <i className=\"fas fa-equals\"></i>\n            </Button>\n        </div>\n    );\n}\n","import KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport * as keys from \"../../utils/keys\";\n\ntype Props = {\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport function KeyboardHardwareEvents({\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <>\n            <KeyboardEventHandler\n                handleKeys={keys.ONE.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.ONE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.TWO.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.TWO)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.THREE.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.THREE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.FOUR.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.FOUR)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.FIVE.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.FIVE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.SIX.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.SIX)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.SEVEN.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.SEVEN)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.EIGHT.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.EIGHT)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.NINE.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.NINE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.ZERO.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.ZERO)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.MINUS.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.MINUS)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.DIVIDE.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.DIVIDE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={[\"all\"]}\n                onKeyEvent={(key, e) => {\n                    if (keys.PLUS.keyStrings.includes(e.key))\n                        onAddKey(keys.PLUS);\n                }}\n            />\n            <KeyboardEventHandler\n                handleKeys={[\"all\"]}\n                onKeyEvent={(key, e) => {\n                    if (keys.TIMES.keyStrings.includes(e.key))\n                        onAddKey(keys.TIMES);\n                }}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.ALL_CLEAR.keyStrings}\n                onKeyEvent={(key, e) => onAllClear()}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.EQUALS.keyStrings}\n                onKeyEvent={(key, e) => onEqual()}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.BACKSPACE.keyStrings}\n                onKeyEvent={(key, e) => onDeleteLastKey()}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.NEGATE.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.NEGATE)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.COMMA.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.COMMA)}\n            />\n            <KeyboardEventHandler\n                handleKeys={keys.PERCENT.keyStrings}\n                onKeyEvent={(key, e) => onAddKey(keys.PERCENT)}\n            />\n        </>\n    );\n}\n","import KeyboardUi from \"./keyboard-ui\";\nimport { KeyboardHardwareEvents } from \"./keyboard-hardware-events\";\n\ntype Props = {\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport default function Keyboard({\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <>\n            <KeyboardUi\n                onAddKey={onAddKey}\n                onDeleteLastKey={onDeleteLastKey}\n                onAllClear={onAllClear}\n                onEqual={onEqual}\n            />\n            <KeyboardHardwareEvents\n                onAddKey={onAddKey}\n                onDeleteLastKey={onDeleteLastKey}\n                onAllClear={onAllClear}\n                onEqual={onEqual}\n            />\n        </>\n    );\n}\n","import \"./bar.css\";\n\nexport default function Bar() {\n  return <div className={\"bar\"}></div>;\n}\n","import \"./casing.css\";\nimport { ToggleButton } from \"../toggle-button/toggle-button\";\nimport Screen from \"../screen/screen\";\nimport Keyboard from \"../keyboard/keyboard\";\nimport Bar from \"../bar/bar\";\nimport { Key } from \"../../utils/keys\";\n\ntype Props = {\n    pressedKeys: Key[];\n    prevPressedKeys: Key[];\n    onAddKey: Function;\n    onDeleteLastKey: Function;\n    onAllClear: Function;\n    onEqual: Function;\n};\n\nexport default function Casing({\n    pressedKeys,\n    prevPressedKeys,\n    onAddKey,\n    onDeleteLastKey,\n    onAllClear,\n    onEqual,\n}: Props) {\n    return (\n        <div className={\"casing\"}>\n            <ToggleButton />\n            <Screen\n                pressedKeys={pressedKeys}\n                prevPressedKeys={prevPressedKeys}\n            />\n            <div className={\"casing__bottom\"}>\n                <Keyboard\n                    onAddKey={onAddKey}\n                    onDeleteLastKey={onDeleteLastKey}\n                    onAllClear={onAllClear}\n                    onEqual={onEqual}\n                />\n                <Bar />\n            </div>\n        </div>\n    );\n}\n","import * as keys from \"./keys\";\nimport { Key, TEMPLATE } from \"./keys\";\nimport React from \"react\";\n\n/**\n * Takes string like '-20,321' and returns a Key object\n * Which looks like that and mathematically behaves like that\n * @param string\n */\nexport const stringToKey = (string: string): Key => {\n    const chars = string.split(\"\");\n\n    let appearanceReactElements = [];\n    let mathFunctions = [];\n\n    for (const char of chars) {\n        for (const [, key] of Object.entries(keys)) {\n            if (key.mathFunction === char) {\n                appearanceReactElements.push(\n                    React.cloneElement(key.appearance, { key: Math.random() })\n                );\n                mathFunctions.push(key.mathFunction);\n            }\n        }\n    }\n\n    let returnable = { ...TEMPLATE };\n    returnable.appearance = <>{appearanceReactElements}</>;\n    returnable.mathFunction = mathFunctions.join(\"\");\n\n    return returnable;\n};\n","import { useState } from \"react\";\nimport Casing from \"../casing/casing\";\nimport { Key, ZERO, MINUS, EQUALS } from \"../../utils/keys\";\nimport { stringToKey } from \"../../utils/string-to-key\";\n\nexport default function Calculator() {\n    const [pressedKeys, setPressedKeys] = useState<Key[]>([ZERO]);\n    const [prevPressedKeys, setPrevPressedKeys] = useState<Key[]>([]);\n\n    const solution = calculate(\n        getKeysToCalculate(pressedKeys).reduce<string>((acc: string, cur) => {\n            return acc + cur.mathFunction;\n        }, \"\")\n    ).toString();\n\n    const onAddKey = (key: Key) => {\n        setPressedKeys(getNextPressedKeys(pressedKeys, key));\n    };\n\n    const onDeleteLastKey = () => {\n        if (pressedKeys.length <= 1) {\n            onAllClear();\n            return;\n        }\n\n        const nextPressedKeys = [...pressedKeys];\n        nextPressedKeys.pop();\n        setPressedKeys(nextPressedKeys);\n    };\n\n    const onAllClear = () => {\n        setPrevPressedKeys([]);\n        setPressedKeys([ZERO]);\n    };\n\n    const onEqual = () => {\n        if (pressedKeys.length <= 1) return;\n\n        setPrevPressedKeys([...pressedKeys, EQUALS]);\n        setPressedKeys([stringToKey(solution)]);\n    };\n\n    return (\n        <Casing\n            onAddKey={onAddKey}\n            onDeleteLastKey={onDeleteLastKey}\n            onAllClear={onAllClear}\n            onEqual={onEqual}\n            pressedKeys={pressedKeys}\n            prevPressedKeys={prevPressedKeys}\n        />\n    );\n}\n\nconst calculate = (calculatable: string): string => {\n    return calculatable.length === 0\n        ? \"\"\n        : Function(`;return ${calculatable}`)();\n};\n\nconst getNextPressedKeys = (currentPressedKeys: Key[], newKey: Key): Key[] => {\n    let nextPressedKeys = [...currentPressedKeys];\n\n    // If it´s the first key-stroke only add key if it can be pressed first\n    if (currentPressedKeys.length === 0 && !newKey.canBePressedFirst)\n        return nextPressedKeys;\n\n    // If first pressed key is a ZERO replace it with newKey\n    if (\n        currentPressedKeys.length === 1 &&\n        currentPressedKeys[0].id === ZERO.id &&\n        !newKey.isOperation\n    ) {\n        return [newKey];\n    }\n\n    // If first pressed key is minus and new key\n    // is operation but not minus do nothing\n    if (\n        currentPressedKeys.length === 1 &&\n        currentPressedKeys[0].id === MINUS.id &&\n        newKey.isOperation\n    ) {\n        return nextPressedKeys;\n    }\n\n    // If last pressed key is operation and new key is operation, replace it\n    if (\n        currentPressedKeys.length >= 1 &&\n        currentPressedKeys[currentPressedKeys.length - 1].isOperation &&\n        newKey.isOperation\n    ) {\n        nextPressedKeys[nextPressedKeys.length - 1] = newKey;\n        return nextPressedKeys;\n    }\n\n    // If a comma has already been pressed prevent\n    // todo: Prevent multiple commas\n\n    nextPressedKeys.push(newKey);\n    return nextPressedKeys;\n};\n\n// Remove trailing operations\nconst getKeysToCalculate = (pressedKeys: Key[]): Key[] => {\n    let keysToCalculate = [...pressedKeys];\n\n    if (pressedKeys.length === 0) return pressedKeys;\n\n    if (pressedKeys[pressedKeys.length - 1].isOperation) {\n        keysToCalculate.pop();\n        return keysToCalculate;\n    }\n    return keysToCalculate;\n};\n","import \"./app.css\";\nimport Calculator from \"../calculator/calculator\";\nimport React, { useEffect, useState } from \"react\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\n\ntype ThemeContextType = {\n    theme: string;\n    setTheme: Function;\n};\n\ntype FullScreenContextType = {\n    isFullScreen: boolean;\n    setIsFullScreen: Function;\n};\n\nexport const ThemContext = React.createContext<ThemeContextType>({\n    theme: \"light\",\n    setTheme: () => {},\n});\n\nexport const FullScreenContext = React.createContext<FullScreenContextType>(\n    {} as FullScreenContextType\n);\n\nexport function App() {\n    const [theme, setTheme] = useState(\"dark\");\n    const [isFullScreen, setIsFullScreen] = useState(false);\n    const handle = useFullScreenHandle();\n\n    useEffect(() => {\n        isFullScreen ? handle.enter() : handle.exit();\n    }, [isFullScreen]);\n\n    return (\n        <FullScreen handle={handle}>\n            <div className=\"app\" data-theme={theme}>\n                <ThemContext.Provider value={{ theme, setTheme }}>\n                    <FullScreenContext.Provider\n                        value={{ isFullScreen, setIsFullScreen }}\n                    >\n                        <Calculator />\n                    </FullScreenContext.Provider>\n                </ThemContext.Provider>\n            </div>\n        </FullScreen>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/app/app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}